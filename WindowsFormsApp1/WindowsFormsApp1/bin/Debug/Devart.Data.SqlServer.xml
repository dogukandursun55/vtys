<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Devart.Data.SqlServer</name>
    <version>2.80.1475.0</version>
    <fullname>Devart.Data.SqlServer, Version=2.80.1475.0, Culture=neutral, PublicKeyToken=09af7300eec23701</fullname>
  </assembly>
  <members>
    <member name="N:Devart.Common">
      <summary>The <see cref="N:Devart.Common" /> namespace contains classes shared by the Devart data providers. </summary>
    </member>
    <member name="T:Devart.Common.DbConnectionBase">
      <summary>Represents an open connection to a server. </summary>
    </member>
    <member name="M:Devart.Common.DbConnectionBase.BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Starts an asynchronous invocation of an <see cref="M:Devart.Common.DbConnectionBase.Open" /> method. </summary>
      <keywords>DbConnectionBase.BeginOpen method </keywords>
      <param name="callback">The delegate to call when the asynchronous invoke is complete. If callback is a null reference (Nothing in Visual Basic), the delegate is not called. </param>
      <param name="stateObject">State information that is passed on to the delegate. </param>
      <returns>An <see cref="T:System.IAsyncResult" /> interface that represents the asynchronous operation started by calling this method. </returns>
    </member>
    <member name="M:Devart.Common.DbConnectionBase.ChangeDatabase(System.String)">
      <summary>Changes the current database associated with an open <see cref="T:Devart.Common.DbConnectionBase" />. </summary>
      <keywords>DbConnectionBase.ChangeDatabase method </keywords>
      <param name="value">The database name. </param>
    </member>
    <member name="M:Devart.Common.DbConnectionBase.Close()">
      <summary>Closes the connection to the database. This is the preferred method of closing any open connection. </summary>
      <keywords>DbConnectionBase.Close method </keywords>
    </member>
    <member name="P:Devart.Common.DbConnectionBase.ConnectionString">
      <summary>Gets or sets the string used to open a server connection. </summary>
      <keywords>DbConnectionBase.ConnectionString property </keywords>
      <value>The connection string that includes parameters needed to establish the initial connection. The default value is an empty string (""). </value>
    </member>
    <member name="P:Devart.Common.DbConnectionBase.ConnectionTimeout">
      <summary>Gets or sets the time to wait while trying to establish a connection before terminating the attempt and generating an error. </summary>
      <keywords>DbConnectionBase.ConnectionTimeout property </keywords>
      <value>The time (in seconds) to wait for a connection to open. The default value is 15 seconds. </value>
    </member>
    <member name="P:Devart.Common.DbConnectionBase.DataSource">
      <summary>Gets or sets name of the server to which to connect. </summary>
      <keywords>DbConnectionBase.DataSource property </keywords>
      <value>Gets or sets name of the server to which to connect. The default value is an empty string (""). </value>
    </member>
    <member name="P:Devart.Common.DbConnectionBase.Database">
      <summary>Gets or sets the name of the current database or the database to be used once a connection is open. </summary>
      <keywords>DbConnectionBase.Database property </keywords>
      <value>The name of the current database or the name of the database to be used once a connection is open. The default value is an empty string (""). </value>
    </member>
    <member name="P:Devart.Common.DbConnectionBase.DesignTimeVisible">
      <summary>Indicates whether the component is visible in design time. </summary>
      <keywords>DbConnectionBase.DesignTimeVisible property </keywords>
    </member>
    <member name="M:Devart.Common.DbConnectionBase.EndOpen(System.IAsyncResult)">
      <summary>Ends an asynchronous invocation of the <see cref="M:Devart.Common.DbConnectionBase.Open" /> method. </summary>
      <keywords>DbConnectionBase.EndOpen method </keywords>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned from <see cref="M:Devart.Common.DbConnectionBase.BeginOpen" />. </param>
    </member>
    <member name="M:Devart.Common.DbConnectionBase.EnlistTransaction(System.Transactions.Transaction)">
      <summary>Enlists in the specified transaction. </summary>
      <keywords>DbConnectionBase.EnlistTransaction method </keywords>
      <param name="transaction">A reference to an existing <b>System.Transactions.Transaction</b> in which to enlist. </param>
    </member>
    <member name="M:Devart.Common.DbConnectionBase.GetSchema()">
      <summary>Returns list of metadata collections and number of restrictions for a collection. </summary>
      <keywords>DbConnectionBase.GetSchema method </keywords>
      <returns>A <see cref="T:System.Data.DataTable" /> object. </returns>
      <overloads>Provides information about server schema objects. </overloads>
    </member>
    <member name="M:Devart.Common.DbConnectionBase.GetSchema(System.String)">
      <summary>Provides information about server schema objects. </summary>
      <keywords>DbConnectionBase.GetSchema method </keywords>
      <param name="collectionName">Name of the collection to get information about. </param>
      <returns>A <see cref="T:System.Data.DataTable" /> object. </returns>
    </member>
    <member name="M:Devart.Common.DbConnectionBase.GetSchema(System.String,System.String[])">
      <summary>Returns detailed information about a server schema object. </summary>
      <keywords>DbConnectionBase.GetSchema method </keywords>
      <param name="collectionName">Name of the collection to get information about. </param>
      <param name="restrictionValues">Array of strings representing collection restrictions. In some cases last array members may be omitted. </param>
      <returns>A <see cref="T:System.Data.DataTable" /> object. </returns>
    </member>
    <member name="P:Devart.Common.DbConnectionBase.InDistributedTransaction">
      <summary>Indicates whether the connection is enlisted in a distributed transaction. </summary>
      <keywords>DbConnectionBase.InDistributedTransaction property </keywords>
      <value><see langword="true" /> if the connection is enlisted in a distributed transaction; otherwise, <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Common.DbConnectionBase.Name">
      <summary>Gets or sets name of the component. </summary>
      <keywords>DbConnectionBase.Name property </keywords>
    </member>
    <member name="M:Devart.Common.DbConnectionBase.Open()">
      <summary>Opens a data source connection with the property settings specified by the <see cref="P:Devart.Common.DbConnectionBase.ConnectionString" />. </summary>
      <keywords>DbConnectionBase.Open method </keywords>
    </member>
    <member name="P:Devart.Common.DbConnectionBase.Owner">
      <summary>Gets or sets a form or other container that the <see cref="T:Devart.Common.DbConnectionBase" /> instance belongs to. </summary>
      <keywords>DbConnectionBase.Owner property </keywords>
      <value>A form or other container that the object belongs to. </value>
    </member>
    <member name="P:Devart.Common.DbConnectionBase.ServerVersion">
      <summary>Gets a string containing the version of the instance of the server to which the client is connected. </summary>
      <keywords>DbConnectionBase.ServerVersion property </keywords>
      <value>The version of the server instance. </value>
    </member>
    <member name="P:Devart.Common.DbConnectionBase.State">
      <summary>Gets the current state of the connection. </summary>
      <keywords>DbConnectionBase.State property </keywords>
      <value>A bitwise combination of the <see cref="T:System.Data.ConnectionState" /> values. The default value is Closed. </value>
    </member>
    <member name="E:Devart.Common.DbConnectionBase.StateChange">
      <summary>Occurs when the state of the connection changes. </summary>
      <keywords>DbConnectionBase.StateChange event </keywords>
    </member>
    <member name="E:Devart.Common.DbConnectionBase.TransactionStateChanged">
      <summary>Occurs when the state of the transaction is changed. </summary>
      <keywords>DbConnectionBase.TransactionStateChanged event </keywords>
    </member>
    <member name="E:Devart.Common.DbConnectionBase.TransactionStateChanging">
      <summary>Occurs when the state of the transaction is changing. </summary>
      <keywords>DbConnectionBase.TransactionStateChanging event </keywords>
    </member>
    <member name="T:Devart.Common.DbMonitorHelper">
      <summary>Allows to monitor dynamic SQL execution in applications that use .NET data providers. </summary>
    </member>
    <member name="T:Devart.Common.DbStatementExecuteEventArgs">
      <summary>Base class for <see cref="T:Devart.Data.SqlServer.SqlStatementExecuteEventArgs" />, that is used in the <see cref="E:Devart.Data.SqlServer.SqlScript.SqlStatementExecute" /> event. </summary>
    </member>
    <member name="P:Devart.Common.DbStatementExecuteEventArgs.Length">
      <summary>Gets length of the statement in symbols. </summary>
      <keywords>DbStatementExecuteEventArgs.Length property </keywords>
      <value>Length of the statement. </value>
    </member>
    <member name="P:Devart.Common.DbStatementExecuteEventArgs.LineNumber">
      <summary>Gets number of line in the whole script where the statement can be located. </summary>
      <keywords>DbStatementExecuteEventArgs.LineNumber property </keywords>
      <value>Number of line in the whole script. </value>
    </member>
    <member name="P:Devart.Common.DbStatementExecuteEventArgs.LinePosition">
      <summary>Gets position of the statement in its line. </summary>
      <keywords>DbStatementExecuteEventArgs.LinePosition property </keywords>
      <value>Position of the statement. </value>
    </member>
    <member name="P:Devart.Common.DbStatementExecuteEventArgs.Offset">
      <summary>Gets offset of the statement in the whole script text. </summary>
      <keywords>DbStatementExecuteEventArgs.Offset property </keywords>
      <value>Offset of the statement in the script text. </value>
    </member>
    <member name="P:Devart.Common.DbStatementExecuteEventArgs.Reader">
      <summary>Gets or sets an <see cref="IDataReader" /> that represents statement resultset. </summary>
      <keywords>DbStatementExecuteEventArgs.Reader property </keywords>
      <value>An <see cref="IDataReader" /> object. This property can be null. </value>
    </member>
    <member name="P:Devart.Common.DbStatementExecuteEventArgs.StatementStatus">
      <summary>Determines status of the statement and script execution. </summary>
      <keywords>DbStatementExecuteEventArgs.StatementStatus property </keywords>
      <value>One of the <see cref="T:Devart.Common.SqlStatementStatus" /> values. The default value is <see cref="T:Devart.Common.SqlStatementStatus" />.Continue. </value>
    </member>
    <member name="P:Devart.Common.DbStatementExecuteEventArgs.StatementType">
      <summary>Gets type of the statement. </summary>
      <keywords>DbStatementExecuteEventArgs.StatementType property </keywords>
      <value>One of the <see cref="T:Devart.Common.SqlStatementType" /> values. </value>
    </member>
    <member name="P:Devart.Common.DbStatementExecuteEventArgs.Text">
      <summary>Gets the SQL statement that is about to be executed. </summary>
      <keywords>DbStatementExecuteEventArgs.Text property </keywords>
      <value>The SQL statement to be executed. </value>
    </member>
    <member name="T:Devart.Common.ParserBehavior">
      <summary>Defines behavior for <see cref="M:Devart.Data.SqlServer.SqlSelectStatement.Parse(System.String,Devart.Common.ParserBehavior)" />. </summary>
    </member>
    <member name="F:Devart.Common.ParserBehavior.All">
      <summary>Parse all statement clauses. </summary>
    </member>
    <member name="F:Devart.Common.ParserBehavior.Columns">
      <summary>Parse select-list. </summary>
    </member>
    <member name="F:Devart.Common.ParserBehavior.GroupBy">
      <summary>Parse GROUP BY clause. </summary>
    </member>
    <member name="F:Devart.Common.ParserBehavior.Having">
      <summary>Parse HAVING clause. </summary>
    </member>
    <member name="F:Devart.Common.ParserBehavior.None">
      <summary>Do not parse any clause. </summary>
    </member>
    <member name="F:Devart.Common.ParserBehavior.OrderBy">
      <summary>Parse ORDER BY clause. </summary>
    </member>
    <member name="F:Devart.Common.ParserBehavior.Tables">
      <summary>Parse FROM clause. </summary>
    </member>
    <member name="F:Devart.Common.ParserBehavior.Where">
      <summary>Parse WHERE clause. </summary>
    </member>
    <member name="T:Devart.Common.SelectColumn">
      <summary>Represents a column or an expression in SELECT, GROUP BY and ORDER BY clauses of a SQL statement. </summary>
    </member>
    <member name="M:Devart.Common.SelectColumn.#ctor(System.String)">
      <summary>Creates and initializes new instance of <see cref="T:Devart.Common.SelectColumn" /> with the specified column name (expression text). </summary>
      <param name="name"> </param>
      <overloads>Creates and initializes new instance of <see cref="T:Devart.Common.SelectColumn" />. </overloads>
    </member>
    <member name="M:Devart.Common.SelectColumn.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Creates and initializes new instance of <see cref="T:Devart.Common.SelectColumn" /> with the specified schema name, table name, column name (expression text) and an alias. </summary>
      <param name="schema">The schema that the column belongs to. </param>
      <param name="table">The table or view that the column belongs to. </param>
      <param name="name">The name of the column or expression text. </param>
      <param name="alias">The column alias. </param>
    </member>
    <member name="M:Devart.Common.SelectColumn.#ctor(System.String,System.String,System.String,System.String,System.String)">
      <summary>Creates and initializes new instance of <see cref="T:Devart.Common.SelectColumn" /> with the specified schema name, table name, column name (expression text) and an alias. </summary>
      <param name="database">The database that the column belongs to. </param>
      <param name="schema">The schema that the column belongs to. </param>
      <param name="table">The table or view that the column belongs to. </param>
      <param name="name">The name of the column or expression text. </param>
      <param name="alias">The column alias. </param>
    </member>
    <member name="P:Devart.Common.SelectColumn.Alias">
      <summary>Gets or sets column alias. </summary>
      <keywords>SelectColumn.Alias property </keywords>
      <value>Column alias. </value>
    </member>
    <member name="P:Devart.Common.SelectColumn.Database">
      <summary>Gets or sets database that the column belongs to. </summary>
      <keywords>SelectColumn.Database property </keywords>
      <value>A database that the column belongs to. </value>
    </member>
    <member name="M:Devart.Common.SelectColumn.Equals(System.Object)">
      <summary>Determines whether two <see cref="T:Devart.Common.SelectColumn" /> objects are identical. </summary>
      <keywords>SelectColumn.Equals method </keywords>
      <param name="obj">A <see cref="T:Devart.Common.SelectColumn" /> object to compare with. </param>
      <returns>
        <see langword="true" />, if the given <paramref name="obj" /> object equals to the current <see cref="T:Devart.Common.SelectColumn" /> instance. </returns>
    </member>
    <member name="P:Devart.Common.SelectColumn.Expression">
      <summary>Gets or sets the SQL expression that the column represents. </summary>
      <keywords>SelectColumn.Expression property </keywords>
      <value>The SQL expression. </value>
    </member>
    <member name="M:Devart.Common.SelectColumn.GetHashCode()">
      <summary>Returns hash code of the current instance. </summary>
      <keywords>SelectColumn.GetHashCode method </keywords>
    </member>
    <member name="P:Devart.Common.SelectColumn.Name">
      <summary>Gets or sets name of the column. </summary>
      <keywords>SelectColumn.Name property </keywords>
      <value>The name of the column. </value>
    </member>
    <member name="P:Devart.Common.SelectColumn.Schema">
      <summary>Gets or sets schema that the column belongs to. </summary>
      <keywords>SelectColumn.Schema property </keywords>
      <value>A schema that the column belongs to. </value>
    </member>
    <member name="P:Devart.Common.SelectColumn.Table">
      <summary>Gets or sets table or view that the column belongs to. </summary>
      <keywords>SelectColumn.Table property </keywords>
      <value>A table or view that the column belongs to. </value>
    </member>
    <member name="M:Devart.Common.SelectColumn.ToString()">
      <summary>Returns the current <see cref="T:Devart.Common.SelectColumn" /> object in the text form. </summary>
      <keywords>SelectColumn.ToString method </keywords>
      <returns>Text representation of the current <see cref="T:Devart.Common.SelectColumn" /> object. </returns>
    </member>
    <member name="T:Devart.Common.SelectColumnCollection">
      <summary>Represents a collection of columns and expressions in a <see cref="T:Devart.Common.SelectStatement" /> object. </summary>
    </member>
    <member name="M:Devart.Common.SelectColumnCollection.Add(Devart.Common.SelectColumn)">
      <summary>Adds the specified <see cref="T:Devart.Common.SelectColumn" /> to the <see cref="T:Devart.Common.SelectColumnCollection" />. </summary>
      <keywords>SelectColumnCollection.Add method </keywords>
      <param name="value">The <see cref="T:Devart.Common.SelectColumn" /> to add to the collection. </param>
      <returns>Index of the new <see cref="T:Devart.Common.SelectColumn" /> object. </returns>
      <overloads>Adds the specified <see cref="T:Devart.Common.SelectColumn" /> to the <see cref="T:Devart.Common.SelectColumnCollection" />. </overloads>
    </member>
    <member name="M:Devart.Common.SelectColumnCollection.Add(System.String)">
      <summary>Creates a new <see cref="T:Devart.Common.SelectColumn" /> object with the name specified and adds it to the collection. </summary>
      <keywords>SelectColumnCollection.Add method </keywords>
      <param name="name">The name of the column which the <see cref="T:Devart.Common.SelectColumn" /> object should represent. </param>
      <returns>The <see cref="T:Devart.Common.SelectColumn" /> object created. </returns>
    </member>
    <member name="M:Devart.Common.SelectColumnCollection.Add(System.String,System.Boolean)">
      <summary>Creates a new <see cref="T:Devart.Common.SelectColumn" /> object with the name specified and adds it to the collection. </summary>
      <keywords>SelectColumnCollection.Add method </keywords>
      <param name="name">The name of the column that the <see cref="T:Devart.Common.SelectColumn" /> object should represent. </param>
      <param name="quote">Specifies whether the column name should be quoted. </param>
      <returns>The <see cref="T:Devart.Common.SelectColumn" /> object created. </returns>
    </member>
    <member name="M:Devart.Common.SelectColumnCollection.Add(System.String,System.String,System.String,System.String)">
      <summary>Adds a newly created <see cref="T:Devart.Common.SelectColumn" /> object with the specified schema, table, name, and alias to the collection. </summary>
      <keywords>SelectColumnCollection.Add method </keywords>
      <param name="schema">The schema which the table containing this column belongs to. </param>
      <param name="table">The name of the table containing the column. </param>
      <param name="name">The name of the column that the <see cref="T:Devart.Common.SelectColumn" /> object should represent. </param>
      <param name="alias">The alias of the column. </param>
      <returns>The <see cref="T:Devart.Common.SelectColumn" /> object created. </returns>
    </member>
    <member name="M:Devart.Common.SelectColumnCollection.Add(System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>Adds a newly created <see cref="T:Devart.Common.SelectColumn" /> object with the specified schema, table, name, and alias to the collection. </summary>
      <keywords>SelectColumnCollection.Add method </keywords>
      <param name="schema">The schema which the table containing this column belongs to. </param>
      <param name="table">The name of the table containing the column. </param>
      <param name="name">The name of the column that the <see cref="T:Devart.Common.SelectColumn" /> object should represent. </param>
      <param name="alias">The alias of the column. </param>
      <param name="quote">Specifies if the column parameters should be quoted. </param>
      <returns>The <see cref="T:Devart.Common.SelectColumn" /> object created. </returns>
    </member>
    <member name="M:Devart.Common.SelectColumnCollection.Add(System.String,System.String,System.String,System.String,System.String)">
      <summary>Adds a newly created <see cref="T:Devart.Common.SelectColumn" /> object with the specified database, schema, table, name, and alias to the collection. </summary>
      <keywords>SelectColumnCollection.Add method </keywords>
      <param name="database">The database which the table containing this column belongs to. </param>
      <param name="schema">The schema which the table containing this column belongs to. </param>
      <param name="table">The name of the table containing the column. </param>
      <param name="name">The name of the column that the <see cref="T:Devart.Common.SelectColumn" /> object should represent. </param>
      <param name="alias">The alias of the column. </param>
      <returns>The <see cref="T:Devart.Common.SelectColumn" /> object created. </returns>
    </member>
    <member name="M:Devart.Common.SelectColumnCollection.Add(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>Adds a newly created <see cref="T:Devart.Common.SelectColumn" /> object with the specified database, schema, table, name, and alias to the collection. </summary>
      <keywords>SelectColumnCollection.Add method </keywords>
      <param name="database">The database which the table containing this column belongs to. </param>
      <param name="schema">The schema which the table containing this column belongs to. </param>
      <param name="table">The name of the table containing the column. </param>
      <param name="name">The name of the column which the <see cref="T:Devart.Common.SelectColumn" /> object should represent. </param>
      <param name="alias">The alias of the column. </param>
      <param name="quote">Specifies if the column parameters should be quoted. </param>
      <returns>The <see cref="T:Devart.Common.SelectColumn" /> object created. </returns>
    </member>
    <member name="M:Devart.Common.SelectColumnCollection.Contains(Devart.Common.SelectColumn)">
      <summary>Gets a value indicating whether a <see cref="T:Devart.Common.SelectColumn" /> object exists in the collection. </summary>
      <keywords>SelectColumnCollection.Contains method </keywords>
      <param name="value">The value of the <see cref="T:Devart.Common.SelectColumn" /> object to find. </param>
      <returns>
        <see langword="true" /> if the collection contains the <see cref="T:Devart.Common.SelectColumn" />; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Common.SelectColumnCollection.CopyTo(Devart.Common.SelectColumn[],System.Int32)">
      <summary>Copies <see cref="T:Devart.Common.SelectColumn" /> objects from the <see cref="T:Devart.Common.SelectColumnCollection" /> to the specified array. </summary>
      <keywords>SelectColumnCollection.CopyTo method </keywords>
      <param name="array">The array into which to copy the <see cref="T:Devart.Common.SelectColumn" /> objects. </param>
      <param name="index">The zero-based index of the array. </param>
    </member>
    <member name="M:Devart.Common.SelectColumnCollection.IndexOf(Devart.Common.SelectColumn)">
      <summary>Gets the location in the collection of the <see cref="T:Devart.Common.SelectColumn" /> object. </summary>
      <keywords>SelectColumnCollection.IndexOf method </keywords>
      <param name="value">The <see cref="T:Devart.Common.SelectColumn" /> object to find. </param>
      <returns>The zero-based location of the <see cref="T:Devart.Common.SelectColumn" /> in the collection. </returns>
    </member>
    <member name="M:Devart.Common.SelectColumnCollection.Insert(System.Int32,Devart.Common.SelectColumn)">
      <summary>Inserts a <see cref="T:Devart.Common.SelectColumn" /> into the collection at the specified index. </summary>
      <keywords>SelectColumnCollection.Insert method </keywords>
      <param name="index">The zero-based index where the table is to be inserted within the collection. </param>
      <param name="value">The <see cref="T:Devart.Common.SelectColumn" /> to add to the collection. </param>
    </member>
    <member name="P:Devart.Common.SelectColumnCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:Devart.Common.SelectColumn" /> at the specified index. </summary>
      <keywords>SelectColumnCollection.Item property </keywords>
      <param name="index">The zero-based index of the table. </param>
      <value>The <see cref="T:Devart.Common.SelectColumn" /> at the specified index. </value>
    </member>
    <member name="M:Devart.Common.SelectColumnCollection.Remove(Devart.Common.SelectColumn)">
      <summary>Removes the specified <see cref="T:Devart.Common.SelectColumn" /> object from the collection. </summary>
      <keywords>SelectColumnCollection.Remove method </keywords>
      <param name="value">The <see cref="T:Devart.Common.SelectColumn" /> object to remove from the collection. </param>
    </member>
    <member name="T:Devart.Common.SelectStatement">
      <summary>Composes, modifies and parses SELECT statements. </summary>
    </member>
    <member name="M:Devart.Common.SelectStatement.AddHavingCondition(System.String)">
      <summary>Adds new condition to HAVING clause of the statement, represented by the <see cref="P:Devart.Common.SelectStatement.Having" /> property. </summary>
      <keywords>SelectStatement.AddHavingCondition method </keywords>
      <param name="condition">A new condition to add. </param>
    </member>
    <member name="M:Devart.Common.SelectStatement.AddWhereCondition(System.String)">
      <summary>Adds new condition to WHERE clause of the statement, represented by the <see cref="P:Devart.Common.SelectStatement.Where" /> property. </summary>
      <keywords>SelectStatement.AddWhereCondition method </keywords>
      <param name="condition">A new condition to add. </param>
    </member>
    <member name="P:Devart.Common.SelectStatement.All">
      <summary>Gets or sets the value, indicating if the all records are selected or only the unique ones. </summary>
      <keywords>SelectStatement.All property </keywords>
      <value><see langword="true" />, if the result set should contain all the rows; otherwise, <see langword="false" />. </value>
    </member>
    <member name="M:Devart.Common.SelectStatement.Clear()">
      <summary>Clears all parts of the <see cref="T:Devart.Common.SelectStatement" />. </summary>
      <keywords>SelectStatement.Clear method </keywords>
    </member>
    <member name="P:Devart.Common.SelectStatement.Columns">
      <summary>Contains list of columns and expressions used in the select-list of the current <see cref="T:Devart.Common.SelectStatement" /> object. </summary>
      <keywords>SelectStatement.Columns property </keywords>
      <value>A <see cref="T:Devart.Common.SelectColumnCollection" /> that represents list of columns and expressions used in the SELECT clause. </value>
    </member>
    <member name="P:Devart.Common.SelectStatement.Distinct">
      <summary>Gets or sets whether statement should request unique rows only. </summary>
      <keywords>SelectStatement.Distinct property </keywords>
      <value>
        <see langword="true" />, if the result set should contain unique rows only; otherwise, <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Common.SelectStatement.GroupBy">
      <summary>Contains list of columns used in the GROUP BY clause of the current <see cref="T:Devart.Common.SelectStatement" /> object. </summary>
      <keywords>SelectStatement.GroupBy property </keywords>
      <value>A <see cref="T:Devart.Common.SelectColumnCollection" /> that represents list of columns used in the GROUP BY clause. </value>
    </member>
    <member name="P:Devart.Common.SelectStatement.Having">
      <summary>Gets or sets HAVING clause of the statement. </summary>
      <keywords>SelectStatement.Having property </keywords>
      <value>The HAVING clause of the statement. </value>
    </member>
    <member name="P:Devart.Common.SelectStatement.OrderBy">
      <summary>Contains list of columns used in the ORDER BY clause of the current <see cref="T:Devart.Common.SelectStatement" /> object. </summary>
      <keywords>SelectStatement.OrderBy property </keywords>
      <value>A <see cref="T:Devart.Common.SelectColumnCollection" /> that represents list of columns used in the ORDER BY clause. </value>
    </member>
    <member name="P:Devart.Common.SelectStatement.Tables">
      <summary>Contains list of tables and subqueries used in the FROM clause of the current <see cref="T:Devart.Common.SelectStatement" /> object. </summary>
      <keywords>SelectStatement.Tables property </keywords>
      <value>A <see cref="T:Devart.Common.SelectTableCollection" /> that represents list of tables and subqueries used in the FROM clause. </value>
    </member>
    <member name="M:Devart.Common.SelectStatement.ToString()">
      <summary>Returns SQL statement in the text form. </summary>
      <keywords>SelectStatement.ToString method </keywords>
      <returns>The text of SQL statement that is equivalent to current state of the <see cref="T:Devart.Common.SelectStatement" /> object. </returns>
    </member>
    <member name="P:Devart.Common.SelectStatement.Where">
      <summary>Gets or sets WHERE clause of the statement. </summary>
      <keywords>SelectStatement.Where property </keywords>
      <value>The WHERE clause of the statement. </value>
    </member>
    <member name="T:Devart.Common.SelectStatementNode">
      <summary>An abstract SQL element. </summary>
    </member>
    <member name="M:Devart.Common.SelectStatementNode.#ctor()">
      <summary>Creates and initializes new instance of <see cref="T:Devart.Common.SelectStatementNode" />. </summary>
    </member>
    <member name="T:Devart.Common.SelectTable">
      <summary>Represents a table or a subquery in the FROM clause of a SELECT statement. </summary>
    </member>
    <member name="M:Devart.Common.SelectTable.#ctor(System.String)">
      <summary>Creates and initializes new instance of <see cref="T:Devart.Common.SelectTable" /> with the specified table name (subquery text). </summary>
      <param name="name">The name of the table or subquery text. </param>
      <overloads>Creates and initializes new instance of <see cref="T:Devart.Common.SelectTable" />. </overloads>
    </member>
    <member name="M:Devart.Common.SelectTable.#ctor(System.String,System.String,System.String)">
      <summary>Creates and initializes new instance of <see cref="T:Devart.Common.SelectTable" /> with the specified schema, table name (subquery text) and alias. </summary>
      <param name="schema">The name of the table schema. </param>
      <param name="name">The name of the table or subquery text. </param>
      <param name="alias">The alias for the table or expression. </param>
    </member>
    <member name="M:Devart.Common.SelectTable.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Creates and initializes new instance of <see cref="T:Devart.Common.SelectTable" /> with the specified schema, table name (subquery text) and alias. </summary>
      <param name="database">The name of the table database. </param>
      <param name="schema">The name of the table schema. </param>
      <param name="name">The name of the table or subquery text. </param>
      <param name="alias">The alias for the table or expression. </param>
    </member>
    <member name="P:Devart.Common.SelectTable.Alias">
      <summary>Gets or sets table alias. </summary>
      <keywords>SelectTable.Alias property </keywords>
      <value>Table alias. </value>
    </member>
    <member name="P:Devart.Common.SelectTable.Database">
      <summary>Gets or sets the name of the table database. </summary>
      <keywords>SelectTable.Database property </keywords>
      <value>The name of the table database. </value>
    </member>
    <member name="M:Devart.Common.SelectTable.Equals(System.Object)">
      <summary>Determines whether two <see cref="T:Devart.Common.SelectTable" /> objects are identical. </summary>
      <keywords>SelectTable.Equals method </keywords>
      <param name="obj">A <see cref="T:Devart.Common.SelectColumn" /> object to compare with. </param>
      <returns>
        <see langword="true" />, if the given <paramref name="obj" /> object equals to the current <see cref="T:Devart.Common.SelectTable" /> instance. </returns>
    </member>
    <member name="M:Devart.Common.SelectTable.GetHashCode()">
      <summary>Returns hash code of the current instance. </summary>
      <keywords>SelectTable.GetHashCode method </keywords>
    </member>
    <member name="P:Devart.Common.SelectTable.JoinClause">
      <summary>Gets or sets a JOIN clause for the <see cref="T:Devart.Common.SelectTable" />. </summary>
      <keywords>SelectTable.JoinClause property </keywords>
      <value>The JOIN clause. </value>
    </member>
    <member name="P:Devart.Common.SelectTable.JoinCondition">
      <summary>Gets or sets a JOIN ON clause for the <see cref="T:Devart.Common.SelectTable" />. </summary>
      <keywords>SelectTable.JoinCondition property </keywords>
      <value>The JOIN ON clause. </value>
    </member>
    <member name="P:Devart.Common.SelectTable.Name">
      <summary>Gets or sets name of the table or subquery text. </summary>
      <keywords>SelectTable.Name property </keywords>
      <value>The name of the table or subquery text. </value>
    </member>
    <member name="P:Devart.Common.SelectTable.Schema">
      <summary>Gets or sets the name of the table schema. </summary>
      <keywords>SelectTable.Schema property </keywords>
      <value>The name of the table schema. </value>
    </member>
    <member name="P:Devart.Common.SelectTable.SubQuery">
      <summary>Gets the subquery text that the <see cref="T:Devart.Common.SelectTable" /> represents. </summary>
      <keywords>SelectTable.SubQuery property </keywords>
      <value>The subquery text. </value>
    </member>
    <member name="M:Devart.Common.SelectTable.ToString()">
      <summary>Returns the current <see cref="T:Devart.Common.SelectTable" /> object in the text form. </summary>
      <keywords>SelectTable.ToString method </keywords>
      <returns>Text representation of the current <see cref="T:Devart.Common.SelectTable" /> object. </returns>
    </member>
    <member name="T:Devart.Common.SelectTableCollection">
      <summary>Represents a collection of tables and subqueries in a <see cref="T:Devart.Common.SelectStatement" /> object. </summary>
    </member>
    <member name="M:Devart.Common.SelectTableCollection.Add(Devart.Common.SelectTable)">
      <summary>Adds the specified <see cref="T:Devart.Common.SelectTable" /> to the <see cref="T:Devart.Common.SelectTableCollection" />. </summary>
      <keywords>SelectTableCollection.Add method </keywords>
      <param name="value">The <see cref="T:Devart.Common.SelectTable" /> to add to the collection. </param>
      <returns>Index of the new <see cref="T:Devart.Common.SelectTable" /> object. </returns>
      <overloads>Adds the specified <see cref="T:Devart.Common.SelectTable" /> to the <see cref="T:Devart.Common.SelectTableCollection" />. </overloads>
    </member>
    <member name="M:Devart.Common.SelectTableCollection.Add(System.String)">
      <summary>Creates a new <see cref="T:Devart.Common.SelectTable" /> object with the name specified and adds it to the collection. </summary>
      <keywords>SelectTableCollection.Add method </keywords>
      <param name="name">The name of the table that the <see cref="T:Devart.Common.SelectTable" /> object should represent. </param>
      <returns>The <see cref="T:Devart.Common.SelectTable" /> object created. </returns>
    </member>
    <member name="M:Devart.Common.SelectTableCollection.Add(System.String,System.Boolean)">
      <summary>Creates a new <see cref="T:Devart.Common.SelectTable" /> object with the name specified and adds it to the collection. </summary>
      <keywords>SelectTableCollection.Add method </keywords>
      <param name="name">The name of the table that the <see cref="T:Devart.Common.SelectTable" /> object should represent. </param>
      <param name="quoted">Specifies whether the table name should be quoted. </param>
      <returns>The <see cref="T:Devart.Common.SelectTable" /> object created. </returns>
    </member>
    <member name="M:Devart.Common.SelectTableCollection.Add(System.String,System.String,System.String)">
      <summary>Adds a newly created <see cref="T:Devart.Common.SelectTable" /> object with the specified schema, name, and alias to the collection. </summary>
      <keywords>SelectTableCollection.Add method </keywords>
      <param name="schema">The schema, which the table belongs to. </param>
      <param name="name">The name of the table that the <see cref="T:Devart.Common.SelectTable" /> object should represent. </param>
      <param name="alias">The alias of the table. </param>
      <returns>The <see cref="T:Devart.Common.SelectTable" /> object created. </returns>
    </member>
    <member name="M:Devart.Common.SelectTableCollection.Add(System.String,System.String,System.String,System.Boolean)">
      <summary>Adds a newly created <see cref="T:Devart.Common.SelectTable" /> object with the specified schema, name, and alias to the collection. </summary>
      <keywords>SelectTableCollection.Add method </keywords>
      <param name="schema">The schema, which the table belongs to. </param>
      <param name="name">The name of the table that the <see cref="T:Devart.Common.SelectTable" /> object should represent. </param>
      <param name="alias">The alias of the table. </param>
      <param name="quote">Specifies if the table parameters should be quoted. </param>
      <returns>The <see cref="T:Devart.Common.SelectTable" /> object created. </returns>
    </member>
    <member name="M:Devart.Common.SelectTableCollection.Add(System.String,System.String,System.String,System.String)">
      <summary>Adds a newly created <see cref="T:Devart.Common.SelectTable" /> object with the specified database, schema, name, and alias to the collection. </summary>
      <keywords>SelectTableCollection.Add method </keywords>
      <param name="database">The database, which the table belongs to. </param>
      <param name="schema">The schema, which the table belongs to. </param>
      <param name="name">The name of the table that the <see cref="T:Devart.Common.SelectTable" /> object should represent. </param>
      <param name="alias">The alias of the table. </param>
      <returns>The <see cref="T:Devart.Common.SelectTable" /> object created. </returns>
    </member>
    <member name="M:Devart.Common.SelectTableCollection.Add(System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>Adds a newly created <see cref="T:Devart.Common.SelectTable" /> object with the specified database, schema, name, and alias to the collection. </summary>
      <keywords>SelectTableCollection.Add method </keywords>
      <param name="database">The database, which the table belongs to. </param>
      <param name="schema">The schema, which the table belongs to. </param>
      <param name="name">The name of the table that the <see cref="T:Devart.Common.SelectTable" /> object should represent. </param>
      <param name="alias">The alias of the table. </param>
      <param name="quote">Specifies if the table parameters should be quoted. </param>
      <returns>The <see cref="T:Devart.Common.SelectTable" /> object created. </returns>
    </member>
    <member name="M:Devart.Common.SelectTableCollection.Contains(Devart.Common.SelectTable)">
      <summary>Gets a value indicating whether a <see cref="T:Devart.Common.SelectTable" /> object exists in the collection. </summary>
      <keywords>SelectTableCollection.Contains method </keywords>
      <param name="value">The value of the <see cref="T:Devart.Common.SelectTable" /> object to find. </param>
      <returns>
        <see langword="true" /> if the collection contains the <see cref="T:Devart.Common.SelectTable" />; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Common.SelectTableCollection.CopyTo(Devart.Common.SelectTable[],System.Int32)">
      <summary>Copies <see cref="T:Devart.Common.SelectTable" /> objects from the <see cref="T:Devart.Common.SelectTableCollection" /> to the specified array. </summary>
      <keywords>SelectTableCollection.CopyTo method </keywords>
      <param name="array">The array into which to copy the <see cref="T:Devart.Common.SelectTable" /> objects. </param>
      <param name="index">The zero-based index of the array. </param>
    </member>
    <member name="M:Devart.Common.SelectTableCollection.IndexOf(Devart.Common.SelectTable)">
      <summary>Gets the location in the collection of the <see cref="T:Devart.Common.SelectTable" /> object. </summary>
      <keywords>SelectTableCollection.IndexOf method </keywords>
      <param name="value">The <see cref="T:Devart.Common.SelectTable" /> object to find. </param>
      <returns>The zero-based location of the <see cref="T:Devart.Common.SelectTable" /> in the collection. </returns>
    </member>
    <member name="M:Devart.Common.SelectTableCollection.Insert(System.Int32,Devart.Common.SelectTable)">
      <summary>Inserts a <see cref="T:Devart.Common.SelectTable" /> into the collection at the specified index. </summary>
      <keywords>SelectTableCollection.Insert method </keywords>
      <param name="index">The zero-based index where the table is to be inserted within the collection. </param>
      <param name="value">The <see cref="T:Devart.Common.SelectTable" /> to add to the collection. </param>
    </member>
    <member name="P:Devart.Common.SelectTableCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:Devart.Common.SelectTable" /> at the specified index. </summary>
      <keywords>SelectTableCollection.Item property </keywords>
      <param name="index">The zero-based index of the table. </param>
      <value>The <see cref="T:Devart.Common.SelectTable" /> at the specified index. </value>
    </member>
    <member name="M:Devart.Common.SelectTableCollection.Remove(Devart.Common.SelectTable)">
      <summary>Removes the specified <see cref="T:Devart.Common.SelectTable" /> object from the collection. </summary>
      <keywords>SelectTableCollection.Remove method </keywords>
      <param name="value">The <see cref="T:Devart.Common.SelectTable" /> object to remove from the collection. </param>
    </member>
    <member name="N:Devart.Data.SqlServer">
      <summary>The <see cref="N:Devart.Data.SqlServer" /> namespace contains the dotConnect for SQL Server data access classes. </summary>
    </member>
    <member name="T:Devart.Data.SqlServer.InvalidPageStatementException">
      <summary>Occurs when SQL Server returns the error 16938. </summary>
    </member>
    <member name="T:Devart.Data.SqlServer.ProductInfo">
      <summary>This class contains product information. </summary>
    </member>
    <member name="M:Devart.Data.SqlServer.ProductInfo.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.ProductInfo" /> class. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.ProductInfo.Version">
      <summary>Returns the version of the product, including its build number. </summary>
      <keywords>ProductInfo.Version field </keywords>
      <value>The version of the product, including its build number. </value>
    </member>
    <member name="T:Devart.Data.SqlServer.SelectStatementClause">
      <summary>Represents a SELECT statement clause. </summary>
    </member>
    <member name="T:Devart.Data.SqlServer.SelectStatementToken">
      <summary>Represents a SELECT statement token. </summary>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlApplicationIntent">
      <summary>Allows declaring the application workload type when connecting to a database. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlApplicationIntent.ReadOnly">
      <summary>The client requests a read workload when connecting to an AlwaysOn enabled database. Allows enabling read-only routing. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlApplicationIntent.ReadWrite">
      <summary>The client requests a read write workload when connecting to an AlwaysOn enabled database. </summary>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlAuthenticationMethod">
      <summary>Determines the authentication method to use when connecting to SQL Azure. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlAuthenticationMethod.ActiveDirectoryIntegrated">
      <summary>Active Directory Integrated authentication is used. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlAuthenticationMethod.ActiveDirectoryInteractive">
      <summary>Active Directory Interactive authentication is used. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlAuthenticationMethod.ActiveDirectoryPassword">
      <summary>Azure Active Directory principal name and password are used. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlAuthenticationMethod.NotSpecified">
      <summary>The authentication method is not specified. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlAuthenticationMethod.SqlPassword">
      <summary>SQL password is used. </summary>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlCommand">
      <summary>Represents a SQL statement or stored procedure to execute against SQL Server. </summary>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommand.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlCommand" /> class. </summary>
      <overloads>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlCommand" /> class. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommand.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlCommand" /> class with the text of the query. </summary>
      <param name="commandText">The text of the query. </param>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommand.#ctor(System.String,Devart.Data.SqlServer.SqlConnection)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlCommand" /> class with the text of the query and a <see ref="T:Devart.Data.SqlServer.SqlConnection" /> object. </summary>
      <param name="commandText">The text of the query. </param>
      <param name="connection">A <see cref="T:Devart.Data.SqlServer.SqlConnection">SqlConnection</see> object that represents the connection to SQL Server. </param>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommand.#ctor(System.String,Devart.Data.SqlServer.SqlConnection,Devart.Data.SqlServer.SqlTransaction)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlCommand" /> class with the text of the query, a <see ref="T:Devart.Data.SqlServer.SqlConnection" /> object,  and the <see cref="T:Devart.Data.SqlServer.SqlTransaction" />. </summary>
      <param name="commandText">The text of the query. </param>
      <param name="connection">A <see cref="T:Devart.Data.SqlServer.SqlConnection">SqlConnection</see> object that represents the connection to SQL Server. </param>
      <param name="transaction">
        <see cref="T:Devart.Data.SqlServer.SqlTransaction" /> object used to perform transactions with this <see cref="T:Devart.Data.SqlServer.SqlCommand" /> object. </param>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommand.BeginExecuteNonQuery()">
      <summary>Starts an asynchronous invocation of an <see cref="M:Devart.Data.SqlServer.SqlCommand.ExecuteNonQuery" /> method. </summary>
      <keywords>SqlCommand.BeginExecuteNonQuery method </keywords>
      <returns>An <see cref="T:System.IAsyncResult" /> interface that represents the asynchronous operation started by calling this method. </returns>
      <overloads>Starts an asynchronous invocation of an <see cref="M:Devart.Data.SqlServer.SqlCommand.ExecuteNonQuery" /> method. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommand.BeginExecuteNonQuery(System.AsyncCallback,System.Object)">
      <summary>Starts an asynchronous invocation of an <see cref="M:Devart.Data.SqlServer.SqlCommand.ExecuteXmlReader" /> method with information for callback function. </summary>
      <keywords>SqlCommand.BeginExecuteNonQuery method </keywords>
      <param name="callback">The delegate to call when the asynchronous invoke is complete. If callback is a null reference (Nothing in Visual Basic), the delegate is not called. </param>
      <param name="stateObject">State information that is passed on to the delegate. </param>
      <returns>An <see cref="T:System.IAsyncResult" /> interface that represents the asynchronous operation started by calling this method. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommand.BeginExecuteReader()">
      <summary>Starts an asynchronous invocation of an <see cref="M:Devart.Common.DbCommand.ExecuteReader" /> method. </summary>
      <keywords>SqlCommand.BeginExecuteReader method </keywords>
      <returns>An <see cref="T:System.IAsyncResult" /> interface that represents the asynchronous operation started by calling this method. </returns>
      <overloads>Starts an asynchronous invocation of an <see cref="M:Devart.Data.SqlServer.SqlCommand.ExecuteReader" /> method. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommand.BeginExecuteReader(System.AsyncCallback,System.Object,System.Data.CommandBehavior)">
      <summary>Starts an asynchronous invocation of an <see cref="M:Devart.Data.SqlServer.SqlCommand.ExecuteReader" /> method with information for callback function. </summary>
      <keywords>SqlCommand.BeginExecuteReader method </keywords>
      <param name="callback">The delegate to call when the asynchronous invoke is complete. If callback is a null reference (Nothing in Visual Basic), the delegate is not called. </param>
      <param name="stateObject">State information that is passed on to the delegate. </param>
      <param name="behavior">One of the <see cref="T:System.Data.CommandBehavior" /> values. </param>
      <returns>An <see cref="T:System.IAsyncResult" /> interface that represents the asynchronous operation started by calling this method. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommand.BeginExecuteReader(System.Data.CommandBehavior)">
      <summary>Starts an asynchronous invocation of an <see cref="M:Devart.Data.SqlServer.SqlCommand.ExecuteReader" /> method. </summary>
      <keywords>SqlCommand.BeginExecuteReader method </keywords>
      <param name="behavior">One of the <see cref="T:System.Data.CommandBehavior" /> values. </param>
      <returns>An <see cref="T:System.IAsyncResult" /> interface that represents the asynchronous operation started by calling this method. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommand.BeginExecuteXmlReader()">
      <summary>Starts an asynchronous invocation of an <see cref="M:Devart.Data.SqlServer.SqlCommand.ExecuteXmlReader" /> method. </summary>
      <keywords>SqlCommand.BeginExecuteXmlReader method </keywords>
      <returns>An <see cref="T:System.IAsyncResult" /> interface that represents the asynchronous operation started by calling this method. </returns>
      <overloads>Starts an asynchronous invocation of an <see cref="M:Devart.Data.SqlServer.SqlCommand.ExecuteXmlReader" /> method. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommand.BeginExecuteXmlReader(System.AsyncCallback,System.Object)">
      <summary>Starts an asynchronous invocation of an <see cref="M:Devart.Data.SqlServer.SqlCommand.ExecuteReader" /> method with information for callback function. </summary>
      <keywords>SqlCommand.BeginExecuteXmlReader method </keywords>
      <param name="callback">The delegate to call when the asynchronous invoke is complete. If callback is a null reference (Nothing in Visual Basic), the delegate is not called. </param>
      <param name="stateObject">State information that is passed on to the delegate. </param>
      <returns>An <see cref="T:System.IAsyncResult" /> interface that represents the asynchronous operation started by calling this method. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommand.Cancel()">
      <summary>Tries to cancel the execution of a <see cref="T:Devart.Data.SqlServer.SqlCommand" />. </summary>
      <keywords>SqlCommand.Cancel method </keywords>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommand.Clone()">
      <summary>Creates a new object that is a copy of the current <see cref="T:Devart.Data.SqlServer.SqlCommand" /> instance. </summary>
      <keywords>SqlCommand.Clone method </keywords>
      <returns>A new <see cref="T:Devart.Data.SqlServer.SqlCommand" /> object in which all property values are the same as the original. </returns>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlCommand.CommandText">
      <summary>Gets or sets the SQL statement to execute against SQL Server. </summary>
      <keywords>SqlCommand.CommandText property </keywords>
      <value>The SQL statement or stored procedure to execute. The default value is an empty string (""). </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlCommand.CommandTimeout">
      <summary>Gets or sets the wait time before terminating an attempt to execute a command and generating an error. Note that it is the time to wait for any server reply since the command was sent to a server, and it doesn't include the time necessary to fetch data if the command selects some data. </summary>
      <keywords>SqlCommand.CommandTimeout property </keywords>
      <value>The time (in seconds) to wait for the command to execute. The default value is 30. Not available under .NET Compact Framework. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlCommand.Connection">
      <summary>Gets or sets the <see cref="T:Devart.Data.SqlServer.SqlConnection">SqlConnection</see> used by this instance of the <see cref="T:Devart.Data.SqlServer.SqlCommand" />. </summary>
      <keywords>SqlCommand.Connection property </keywords>
      <value>The connection to a data source. The default value is a null reference. </value>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommand.CreateParameter()">
      <summary>Creates a new instance of a <see cref="T:Devart.Data.SqlServer.SqlParameter" /> object. </summary>
      <keywords>SqlCommand.CreateParameter method </keywords>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlParameter" /> object. </returns>
      <overloads>Creates a new instance of a <see cref="T:Devart.Data.SqlServer.SqlParameter" /> object. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommand.EndExecuteNonQuery(System.IAsyncResult)">
      <summary>Ends an asynchronous invocation of the <see cref="M:Devart.Data.SqlServer.SqlCommand.ExecuteNonQuery" /> method. </summary>
      <keywords>SqlCommand.EndExecuteNonQuery method </keywords>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by <see cref="M:Devart.Data.SqlServer.SqlCommand.BeginExecuteNonQuery" />. </param>
      <returns>For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command. For all other types of statements, the return value is -1. </returns>
      <overloads>Ends an asynchronous invocation of the <see cref="M:Devart.Data.SqlServer.SqlCommand.ExecuteNonQuery" /> method. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommand.EndExecuteReader(System.IAsyncResult)">
      <summary>Ends an asynchronous invocation of the <see cref="M:Devart.Data.SqlServer.SqlCommand.ExecuteReader" /> method. </summary>
      <keywords>SqlCommand.EndExecuteReader method </keywords>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned from <see cref="M:Devart.Common.DbCommandBase.BeginExecuteReader" />. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlDataReader" /> object. </returns>
      <overloads>Ends an asynchronous invocation of the <see cref="M:Devart.Data.SqlServer.SqlCommand.ExecuteReader" /> method. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommand.EndExecuteXmlReader(System.IAsyncResult)">
      <summary>Ends an asynchronous invocation of the <see cref="M:Devart.Data.SqlServer.SqlCommand.ExecuteXmlReader" /> method. </summary>
      <keywords>SqlCommand.EndExecuteXmlReader method </keywords>
      <param name="ar"> </param>
      <returns>A <see cref="T:System.Xml.XmlReader" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommand.ExecuteNonQuery()">
      <summary>Executes SQL statement against the <see cref="T:Devart.Data.SqlServer.SqlConnection" /> and returns the number of rows affected. </summary>
      <keywords>SqlCommand.ExecuteNonQuery method </keywords>
      <returns>For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command. For all other types of statements, the return value is -1. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommand.ExecutePageReader(System.Data.CommandBehavior,System.Int32,System.Int32)">
      <summary>Returns a specific subset of rows when paging through the results of a query. </summary>
      <keywords>SqlCommand.ExecutePageReader method </keywords>
      <param name="behavior">One of the <see cref="T:System.Data.CommandBehavior" /> values. </param>
      <param name="startRecord">Specifies the number of starting record of the set of records to be returned. </param>
      <param name="maxRecords">Specifies total number of records to retrieve. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlDataReader" /> object with requested records. </returns>
      <overloads>Returns a specific subset of rows when paging through the results of a query. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommand.ExecuteReader()">
      <summary>Sends the <see cref="P:Devart.Data.SqlServer.SqlCommand.CommandText" /> to the <see cref="P:Devart.Data.SqlServer.SqlCommand.Connection" /> and builds a <see cref="T:Devart.Data.SqlServer.SqlDataReader" />. </summary>
      <keywords>SqlCommand.ExecuteReader method </keywords>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlDataReader" /> object. </returns>
      <overloads>Sends the <see cref="P:Devart.Data.SqlServer.SqlCommand.CommandText" /> to the <see cref="P:Devart.Data.SqlServer.SqlCommand.Connection" /> and builds a <see cref="T:Devart.Data.SqlServer.SqlDataReader" />. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommand.ExecuteReader(System.Data.CommandBehavior)">
      <summary>Sends the <see cref="P:Devart.Data.SqlServer.SqlCommand.CommandText" /> to the <see cref="P:Devart.Data.SqlServer.SqlCommand.Connection" />, and builds a <see cref="T:Devart.Data.SqlServer.SqlDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values. </summary>
      <keywords>SqlCommand.ExecuteReader method </keywords>
      <param name="behavior">One of the <see cref="T:System.Data.CommandBehavior" /> values. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlDataReader" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommand.ExecuteXmlReader()">
      <summary>Sends the <see cref="P:Devart.Data.SqlServer.SqlCommand.CommandText" /> to the <see cref="T:Devart.Data.SqlServer.SqlConnection" /> and builds an <b>XmlReader</b> object. </summary>
      <keywords>SqlCommand.ExecuteXmlReader method </keywords>
      <returns>An <see cref="T:System.Xml.XmlReader" /> object. </returns>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlCommand.Notification">
      <summary>Gets or sets the <see cref="T:System.Data.Sql.SqlNotificationRequest" /> object bound to this <see cref="T:Devart.Data.SqlServer.SqlCommand" />. </summary>
      <keywords>SqlCommand.Notification property </keywords>
      <value>A <see cref="T:System.Data.Sql.SqlNotificationRequest" /> object. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlCommand.NotificationAutoEnlist">
      <summary>Determines whether the application should automatically receive query notifications from a common <see cref="T:Devart.Data.SqlServer.SqlDependency" /> object. </summary>
      <keywords>SqlCommand.NotificationAutoEnlist property </keywords>
      <value>If <see langword="true" />, the application should automatically receive query notifications from a common <see cref="T:Devart.Data.SqlServer.SqlDependency" /> object; otherwise, <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlCommand.Parameters">
      <summary>Gets or sets the <see cref="T:Devart.Data.SqlServer.SqlParameterCollection" />. </summary>
      <keywords>SqlCommand.Parameters property </keywords>
      <value>The parameters of a SQL statement or a stored procedure. The default value is an empty collection. </value>
    </member>
    <member name="E:Devart.Data.SqlServer.SqlCommand.StatementCompleted">
      <summary>Occurs when the execution of a SQL statement completes. </summary>
      <keywords>SqlCommand.StatementCompleted event </keywords>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlCommand.Transaction">
      <summary>Gets the <see cref="T:Devart.Data.SqlServer.SqlTransaction" /> in which the <see cref="T:Devart.Data.SqlServer.SqlCommand" /> is executed. </summary>
      <keywords>SqlCommand.Transaction property </keywords>
      <value>A <see cref="T:Devart.Data.SqlServer.SqlTransaction" /> object. The default value is a null reference. </value>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlCommandBuilder">
      <summary>Automatically generates single-table commands used to reconcile changes made to a <see cref="T:System.Data.DataSet" /> with the SQL Server. </summary>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommandBuilder.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlCommandBuilder" /> class. </summary>
      <overloads>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlCommandBuilder" /> class. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommandBuilder.#ctor(Devart.Data.SqlServer.SqlDataAdapter)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlCommandBuilder" /> class with the associated <see cref="T:Devart.Data.SqlServer.SqlDataAdapter" /> object. </summary>
      <param name="adapter"> </param>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlCommandBuilder.CatalogSeparator">
      <summary>Gets or sets separator string to be used when referencing a schema. </summary>
      <keywords>SqlCommandBuilder.CatalogSeparator property </keywords>
      <value>Separator between catalog and schema. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlCommandBuilder.DataAdapter">
      <summary>Gets or sets a <see cref="T:Devart.Data.SqlServer.SqlDataAdapter" /> object for which this <see cref="T:Devart.Data.SqlServer.SqlCommandBuilder" /> object will generate SQL statements. </summary>
      <keywords>SqlCommandBuilder.DataAdapter property </keywords>
      <value>A <see cref="T:Devart.Data.SqlServer.SqlDataAdapter" /> object that is associated with this <see cref="T:Devart.Data.SqlServer.SqlCommandBuilder" />. </value>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommandBuilder.DeriveParameters(Devart.Data.SqlServer.SqlCommand)">
      <summary>Populates the specified <see cref="T:Devart.Data.SqlServer.SqlCommand" /> object's <see cref="P:Devart.Data.SqlServer.SqlCommand.Parameters" /> collection with parameter information for the SQL statement specified in the <see cref="P:Devart.Data.SqlServer.SqlCommand.CommandText" />. </summary>
      <keywords>SqlCommandBuilder.DeriveParameters method </keywords>
      <param name="command">The <see cref="T:Devart.Data.SqlServer.SqlCommand" /> referencing the SQL statement for which the parameter information is to be derived. The derived parameters will be populated into the <see cref="P:Devart.Data.SqlServer.SqlCommand.Parameters" /> collection of this command. </param>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommandBuilder.GetDeleteCommand()">
      <summary>Gets the automatically generated SQL statement required to perform deletions on the data source when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update()" /> on the <see cref="T:Devart.Data.SqlServer.SqlDataAdapter" />. </summary>
      <keywords>SqlCommandBuilder.GetDeleteCommand method </keywords>
      <returns>The text of the SQL statement to be executed. </returns>
      <overloads>Gets the automatically generated SQL statement required to perform deletions on the data source. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommandBuilder.GetDeleteCommand(System.Boolean)">
      <summary>Gets the automatically generated SQL statement required to perform deletions on the data source when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update()" /> on the <see cref="T:Devart.Data.SqlServer.SqlDataAdapter" />. </summary>
      <keywords>SqlCommandBuilder.GetDeleteCommand method </keywords>
      <param name="useColumnsForParameterNames">Determines whether names of parameters in command text will be based on columns' names. </param>
      <returns>The text of the SQL statement to be executed. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommandBuilder.GetInsertCommand()">
      <summary>Gets the automatically generated SQL statement required to perform inserts on the data source when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update()" /> on the <see cref="T:Devart.Data.SqlServer.SqlDataAdapter" />. </summary>
      <keywords>SqlCommandBuilder.GetInsertCommand method </keywords>
      <returns>The text of the SQL statement to be executed. </returns>
      <overloads>Gets the automatically generated SQL statement required to perform inserts on the data source. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommandBuilder.GetInsertCommand(System.Boolean)">
      <summary>Gets the automatically generated SQL statement required to perform inserts on the data source when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update()" /> on the <see cref="T:Devart.Data.SqlServer.SqlDataAdapter" />. </summary>
      <keywords>SqlCommandBuilder.GetInsertCommand method </keywords>
      <param name="useColumnsForParameterNames">Determines whether names of parameters in command text will be based on columns' names. </param>
      <returns>The text of the SQL statement to be executed. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommandBuilder.GetInsertCommand(System.String[],System.Boolean)">
      <summary>Gets the automatically generated SQL statement required to perform inserts on the data source when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update()" /> on the <see cref="T:Devart.Data.SqlServer.SqlDataAdapter" />. </summary>
      <keywords>SqlCommandBuilder.GetInsertCommand method </keywords>
      <param name="fields">Defines list of columns that are allowed to update. </param>
      <param name="useColumnsForParameterNames">Determines whether names of parameters in command text will be based on columns' names. </param>
      <returns>The text of the SQL statement to be executed. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommandBuilder.GetRefreshCommand()">
      <summary>Gets the automatically generated SQL statement required to refresh values from the data source. </summary>
      <keywords>SqlCommandBuilder.GetRefreshCommand method </keywords>
      <returns>A <see cref="T:Devart.Common.DbCommand" /> with <see cref="P:Devart.Common.DbCommandBase.CommandText" /> containing SQL statement to be executed. </returns>
      <overloads>Gets the automatically generated SQL statement required to refresh values from the data source. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommandBuilder.GetRefreshCommand(System.Boolean)">
      <summary>Gets the automatically generated SQL statement required to refresh values from the data source. </summary>
      <keywords>SqlCommandBuilder.GetRefreshCommand method </keywords>
      <param name="useColumnsForParameterNames">Determines whether dotConnect for SQL Server uses columns metadata to make up parameters' names. If <see langword="true" />, the names are composed using colon and name of appropriate column; otherwise the names look like :p1, :p2 etc. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlCommand" /> with <see cref="P:Devart.Data.SqlServer.SqlCommand.CommandText" /> containing SQL statement to be executed. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommandBuilder.GetRefreshCommand(System.String[],System.Boolean)">
      <summary>Gets the automatically generated SQL statement required to refresh values from the data source. </summary>
      <keywords>SqlCommandBuilder.GetRefreshCommand method </keywords>
      <param name="fields">The array of string containing list of the field names. </param>
      <param name="useColumnsForParameterNames">Determines whether dotConnect for SQL Server uses columns metadata to make up parameters' names. If <see langword="true" />, the names are composed using colon and name of appropriate column; otherwise the names look like :p1, :p2 etc. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlCommand" /> with <see cref="P:Devart.Data.SqlServer.SqlCommand.CommandText" /> containing SQL statement to be executed. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommandBuilder.GetUpdateCommand()">
      <summary>Gets the automatically generated SQL statement required to perform updates on the data source when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update()" /> on the <see cref="T:Devart.Data.SqlServer.SqlDataAdapter" />. </summary>
      <keywords>SqlCommandBuilder.GetUpdateCommand method </keywords>
      <returns>The <see cref="T:Devart.Data.SqlServer.SqlCommand" /> object to be executed. </returns>
      <overloads>Gets the automatically generated SQL statement required to perform updates on the data source. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommandBuilder.GetUpdateCommand(System.Boolean)">
      <summary>Gets the automatically generated SQL statement required to perform updates on the data source when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update()" /> on the <see cref="T:Devart.Data.SqlServer.SqlDataAdapter" />. </summary>
      <keywords>SqlCommandBuilder.GetUpdateCommand method </keywords>
      <param name="useColumnsForParameterNames">Determines whether names of parameters in command text will be based on columns' names. </param>
      <returns>The <see cref="T:Devart.Data.SqlServer.SqlCommand" /> object to be executed. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommandBuilder.GetUpdateCommand(System.String[],System.Boolean)">
      <summary>Gets the automatically generated SQL statement required to perform updates on the data source when an application calls <see cref="M:System.Data.Common.DbDataAdapter.Update()" /> on the <see cref="T:Devart.Data.SqlServer.SqlDataAdapter" />. </summary>
      <keywords>SqlCommandBuilder.GetUpdateCommand method </keywords>
      <param name="fields">Defines list of columns that are allowed to update. </param>
      <param name="useColumnsForParameterNames">Determines whether names of parameters in command text will be based on columns' names. </param>
      <returns>The <see cref="T:Devart.Data.SqlServer.SqlCommand" /> object to be executed. </returns>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlCommandBuilder.KeyFields">
      <summary>Gets or sets string containing list of key field names separated by semicolon. They are used to generate update commands. </summary>
      <keywords>SqlCommandBuilder.KeyFields property </keywords>
      <value>The string containing list of key field names separated by semicolon. </value>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommandBuilder.QuoteIdentifier(System.String)">
      <summary>Returns the string passed as the parameter enclosed in quotes. </summary>
      <keywords>SqlCommandBuilder.QuoteIdentifier method </keywords>
      <param name="unquotedIdentifier">Identifier to be placed inside the quotes. </param>
      <returns>The identifier enclosed in quotes. </returns>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlCommandBuilder.QuotePrefix">
      <summary>The string to be placed before identifier when quoting a string with <see cref="M:Devart.Data.SqlServer.SqlCommandBuilder.QuoteIdentifier(System.String)" /> method. </summary>
      <keywords>SqlCommandBuilder.QuotePrefix property </keywords>
      <value>Quote prefix. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlCommandBuilder.QuoteSuffix">
      <summary>The string to be placed after identifier when quoting a string with <see cref="M:Devart.Data.SqlServer.SqlCommandBuilder.QuoteIdentifier(System.String)" /> method. </summary>
      <keywords>SqlCommandBuilder.QuoteSuffix property </keywords>
      <value>Quote suffix. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlCommandBuilder.RefreshingFields">
      <summary>Gets or sets list of fields whose values should be retrieved after a DML statement execution. </summary>
      <keywords>SqlCommandBuilder.RefreshingFields property </keywords>
      <value>The string containing list of field names separated by semicolon. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlCommandBuilder.SchemaSeparator">
      <summary>Gets or sets separator string to be used when referencing a table. </summary>
      <keywords>SqlCommandBuilder.SchemaSeparator property </keywords>
      <value>Separator between schema and table. </value>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlCommandBuilder.UnquoteIdentifier(System.String)">
      <summary>Removes quote strings from identifier. </summary>
      <keywords>SqlCommandBuilder.UnquoteIdentifier method </keywords>
      <param name="quotedIdentifier">String containing <see cref="P:Devart.Common.DbCommandBuilder.QuotePrefix" />, identifier itself, and <see cref="P:Devart.Common.DbCommandBuilder.QuoteSuffix" /> parts. </param>
      <returns>Unquoted identifier. </returns>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlCommandBuilder.UpdatingFields">
      <summary>Gets or sets list of fields to modify. </summary>
      <keywords>SqlCommandBuilder.UpdatingFields property </keywords>
      <value>The string containing list of field names separated by semicolon. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlCommandBuilder.UpdatingTable">
      <summary>
        <para>Gets or sets table name to generate update statements for.</para> </summary>
      <keywords>SqlCommandBuilder.UpdatingTable property </keywords>
      <value>The name of the table. </value>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlConnection">
      <summary>Represents an open connection to SQL Server. </summary>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlConnection.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlConnection">SqlConnection</see> class. </summary>
      <overloads>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlConnection">SqlConnection</see> class. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlConnection.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlConnection">SqlConnection</see> class when given a string containing the connection string. </summary>
      <param name="connectionString">The connection used to connect to SQL Server. </param>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlConnection.BeginTransaction()">
      <summary>Starts a database transaction. </summary>
      <keywords>SqlConnection.BeginTransaction method </keywords>
      <returns>An object representing the new transaction. </returns>
      <overloads>Starts a database transaction. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlConnection.BeginTransaction(System.Data.IsolationLevel)">
      <summary>Starts a database transaction with the specified isolation level. </summary>
      <keywords>SqlConnection.BeginTransaction method </keywords>
      <param name="il">The isolation level under which the transaction should run. </param>
      <returns>An object representing the new transaction. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlConnection.BeginTransaction(System.Data.IsolationLevel,System.String)">
      <summary>Starts a database transaction with the specified isolation level and transaction name. </summary>
      <keywords>SqlConnection.BeginTransaction method </keywords>
      <param name="il">The isolation level under which the transaction should run. </param>
      <param name="transactionName">The name of the transaction. </param>
      <returns>An object representing the new transaction. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlConnection.BeginTransaction(System.String)">
      <summary>Starts a database transaction with the specified transaction name. </summary>
      <keywords>SqlConnection.BeginTransaction method </keywords>
      <param name="transactionName">The name of the transaction. </param>
      <returns>An object representing the new transaction. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlConnection.ChangeDatabase(System.String)">
      <summary>Changes the current database. </summary>
      <keywords>SqlConnection.ChangeDatabase method </keywords>
      <param name="databaseName">The name of a current database. </param>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlConnection.ChangePassword(System.String,System.String)">
      <summary>Changes the password for the user specified in the connection string. </summary>
      <keywords>SqlConnection.ChangePassword method </keywords>
      <param name="connectionString">The connection string that specifies the user to change the password for. Must contain the user ID and the current password. </param>
      <param name="newPassword">The new password. </param>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlConnection.ClearAllPools()">
      <summary>Clears all pools associated with the connection. </summary>
      <keywords>SqlConnection.ClearAllPools method </keywords>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlConnection.ClearPool(Devart.Data.SqlServer.SqlConnection)">
      <summary>Clears the pool matching <see cref="P:Devart.Data.SqlServer.SqlConnection.ConnectionString" /> of provided <see cref="T:Devart.Data.SqlServer.SqlConnection">SqlConnection</see> object. </summary>
      <keywords>SqlConnection.ClearPool method </keywords>
      <param name="connection">A connection that holds <see cref="P:Devart.Data.SqlServer.SqlConnection.ConnectionString" /> that identifies pool to clear. </param>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlConnection.Clone()">
      <summary>Creates a new object that is a copy of the current instance. </summary>
      <keywords>SqlConnection.Clone method </keywords>
      <returns>A new <see cref="T:Devart.Data.SqlServer.SqlConnection">SqlConnection</see> object. </returns>
    </member>
    <member name="E:Devart.Data.SqlServer.SqlConnection.ConnectionLost">
      <summary>Occurs when connection to the data source is lost in case <see cref="P:Devart.Data.SqlServer.SqlConnection.LocalFailover" /> is set to <see langword="true" />. You may use this event to implicitly reconnect and reexecute the current operation. </summary>
      <keywords>SqlConnection.ConnectionLost event </keywords>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnection.ConnectionString">
      <summary>Gets or sets the string used to open a SQL Server connection. </summary>
      <keywords>SqlConnection.ConnectionString property </keywords>
      <value>The connection string that includes the parameters needed to establish the initial connection. The default value is an empty string (""). </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnection.ConnectionTimeout">
      <summary>Gets the time to wait while trying to establish a connection before terminating the attempt and generating an error. </summary>
      <keywords>SqlConnection.ConnectionTimeout property </keywords>
      <value>The time (in seconds) to wait for a connection to open. The default value is 15 seconds. </value>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlConnection.CreateCommand()">
      <summary>Creates and returns a <see cref="T:Devart.Data.SqlServer.SqlCommand" /> object associated with the <see cref="T:Devart.Data.SqlServer.SqlConnection">SqlConnection</see>. </summary>
      <keywords>SqlConnection.CreateCommand method </keywords>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlCommand" /> object. </returns>
      <overloads>Creates and returns a <see cref="T:Devart.Data.SqlServer.SqlCommand" /> object associated with the <see cref="T:Devart.Data.SqlServer.SqlConnection">SqlConnection</see>. </overloads>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnection.DataSource">
      <summary>Gets or sets the name of the instance of SQL Server to which to connect. </summary>
      <keywords>SqlConnection.DataSource property </keywords>
      <value>The name of the instance of SQL Server. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnection.Database">
      <summary>Gets or sets the name of the current database or the database to be used once a connection is open. </summary>
      <keywords>SqlConnection.Database property </keywords>
      <value>The name of the current database or the name of the database to be used once a connection is open. The default value is an empty string (""). </value>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)">
      <summary>Enlists in the specified transaction as a distributed transaction. </summary>
      <keywords>SqlConnection.EnlistDistributedTransaction method </keywords>
      <param name="transaction">A reference to an existing transaction in which to enlist. </param>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlConnection.EnlistTransaction(System.Transactions.Transaction)">
      <summary>Enlists in the specified transaction. </summary>
      <keywords>SqlConnection.EnlistTransaction method </keywords>
      <param name="transaction">A reference to an existing <b>System.Transactions.Transaction</b> in which to enlist. </param>
    </member>
    <member name="E:Devart.Data.SqlServer.SqlConnection.Error">
      <summary>Occurs when SQL Server returns an error. </summary>
      <keywords>SqlConnection.Error event </keywords>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnection.FireInfoMessageEventOnUserErrors">
      <summary>Determines whether to handle errors, treated as exceptions, in the <see cref="E:Devart.Data.SqlServer.SqlConnection.InfoMessage" /> event handler. </summary>
      <keywords>SqlConnection.FireInfoMessageEventOnUserErrors property </keywords>
      <value>If <see langword="true" />, errors, previously treated as exceptions, are handled in the <see cref="E:Devart.Data.SqlServer.SqlConnection.InfoMessage" /> event handler; otherwise, <see langword="false" />. </value>
    </member>
    <member name="E:Devart.Data.SqlServer.SqlConnection.InfoMessage">
      <summary>Occurs when SQL Server returns a warning or informational message. </summary>
      <keywords>SqlConnection.InfoMessage event </keywords>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnection.LocalFailover">
      <summary>Determines whether the <see cref="E:Devart.Data.SqlServer.SqlConnection.ConnectionLost" /> event, which allows implicit reconnecting and reexectuting the corresponding operation, occurs after connection is lost. </summary>
      <keywords>SqlConnection.LocalFailover property </keywords>
      <value>If <see langword="true" />,  the <see cref="E:Devart.Data.SqlServer.SqlConnection.ConnectionLost" /> event occurs when connection is lost; otherwise, an exception is thrown. The default value is <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnection.Name">
      <summary>Gets or sets the name of the component. </summary>
      <keywords>SqlConnection.Name property </keywords>
      <value>The name of the component. </value>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlConnection.Open()">
      <summary>Opens a SQL Server connection with the property settings specified by the <see cref="P:Devart.Data.SqlServer.SqlConnection.ConnectionString" />. </summary>
      <keywords>SqlConnection.Open method </keywords>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnection.Owner">
      <summary>Gets or sets a form or other container that the <see cref="T:Devart.Data.SqlServer.SqlConnection">SqlConnection</see> instance belongs to. </summary>
      <keywords>SqlConnection.Owner property </keywords>
      <value>A form or other container that the <see cref="T:Devart.Data.SqlServer.SqlConnection">SqlConnection</see> instance belongs to. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnection.Password">
      <summary>Gets or sets the user's password to connect. </summary>
      <keywords>SqlConnection.Password property </keywords>
      <value>The user's password to connect. </value>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlConnection.ResetStatistics()">
      <summary>Resets all values to 0 if statistics gathering is enabled. </summary>
      <keywords>SqlConnection.ResetStatistics method </keywords>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlConnection.RetrieveStatistics()">
      <summary>Returns a collection of statistics at the moment the method is called. </summary>
      <keywords>SqlConnection.RetrieveStatistics method </keywords>
      <returns>A name value pair collection of statistics. </returns>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnection.ServerVersion">
      <summary>Gets a string containing the version of the instance of SQL Server to which the client is connected. </summary>
      <keywords>SqlConnection.ServerVersion property </keywords>
      <value>The version of the instance of SQL Server. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnection.State">
      <summary>Gets the current state of the connection. </summary>
      <keywords>SqlConnection.State property </keywords>
      <value>A bitwise combination of the <see cref="T:System.Data.ConnectionState" /> values. The default value is Closed. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnection.StatisticsEnabled">
      <summary>Determines whether to enable statistics gathering for the connection. </summary>
      <keywords>SqlConnection.StatisticsEnabled property </keywords>
      <value><see langword="true" /> if the statistics gathering must be enabled for the connection; otherwise, <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnection.UserId">
      <summary>Gets or sets the name of the user to connect. </summary>
      <keywords>SqlConnection.UserId property </keywords>
      <value>The name of the user to connect. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnection.WorkstationId">
      <summary>Gets a string that identifies the database client. </summary>
      <keywords>SqlConnection.WorkstationId property </keywords>
      <value>A string that identifies the database client. If not specified, the name of the client computer. If neither is specified, the value is an empty string. </value>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlConnectionColumnEncryptionSetting">
      <summary>Determines whether the Always Encrypted feature is enabled for a connection. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlConnectionColumnEncryptionSetting.Disabled">
      <summary>The Always Encrypted feature is disabled for a connection. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlConnectionColumnEncryptionSetting.Enabled">
      <summary>The Always Encrypted feature is enabled for a connection. </summary>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlConnectionStringBuilder">
      <summary>Generates automatically connection strings used to connect to SQL Server. </summary>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlConnectionStringBuilder.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlConnectionStringBuilder" /> class. </summary>
      <overloads>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlConnectionStringBuilder" /> class. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlConnectionStringBuilder.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlConnectionStringBuilder" /> class and assigns custom initial values to some properties. </summary>
      <param name="connectionString">Initial connection setup string. </param>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.ApplicationIntent">
      <summary>Declares the application workload type when connecting to a database - read write or read only. </summary>
      <keywords>SqlConnectionStringBuilder.ApplicationIntent property </keywords>
      <value>One of the <see cref="T:Devart.Data.SqlServer.SqlApplicationIntent" /> values. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.ApplicationName">
      <summary>Gets or sets the name of the application associated with the connection string. </summary>
      <keywords>SqlConnectionStringBuilder.ApplicationName property </keywords>
      <value>The name of the application, or "dotConnect for SQL Server" if no name has been supplied. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.AsynchronousProcessing">
      <summary>Gets or sets a Boolean value that indicates whether asynchronous processing is allowed by the connection created by using this connection string. </summary>
      <keywords>SqlConnectionStringBuilder.AsynchronousProcessing property </keywords>
      <value>If <see langword="true" />, asynchronous processing is allowed; otherwise, <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.AttachDBFilename">
      <summary>Gets or sets a string that contains the name of the primary file. This includes the full path name of an attachable database. </summary>
      <keywords>SqlConnectionStringBuilder.AttachDBFilename property </keywords>
      <value>The name of the primary file. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.Authentication">
      <summary>Gets or sets the authentication method to use for connecting to SQL Azure. </summary>
      <keywords>SqlConnectionStringBuilder.Authentication property </keywords>
      <value>One of the <see cref="T:Devart.Data.SqlServer.SqlAuthenticationMethod" /> values. </value>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlConnectionStringBuilder.Clear()">
      <summary>Sets all <see cref="T:Devart.Data.SqlServer.SqlConnectionStringBuilder" /> properties to default values. </summary>
      <keywords>SqlConnectionStringBuilder.Clear method </keywords>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.ColumnEncryptionSetting">
      <summary>Gets or sets a Boolean value that determines whether the Always Encrypted feature is enabled for a connection. </summary>
      <keywords>SqlConnectionStringBuilder.ColumnEncryptionSetting property </keywords>
      <value>One of the <see cref="T:Devart.Data.SqlServer.SqlConnectionColumnEncryptionSetting" /> values. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.ConnectTimeout">
      <summary>Gets or sets the time to wait while trying to establish a connection before terminating the attempt and generating an error. </summary>
      <keywords>SqlConnectionStringBuilder.ConnectTimeout property </keywords>
      <value>The time (in seconds) to wait for a connection to open. The default value is 15 seconds. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.ConnectionLifetime">
      <summary>Gets or sets time span in seconds for connection to live. </summary>
      <keywords>SqlConnectionStringBuilder.ConnectionLifetime property </keywords>
      <value>Number of seconds for connection to live. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.ConnectionReset">
      <summary>Gets or sets a Boolean value that indicates whether the connection is reset when drawn from the connection pool. </summary>
      <keywords>SqlConnectionStringBuilder.ConnectionReset property </keywords>
      <value>If <see langword="true" />, the connection is reset when drawn from the connection pool; otherwise, <see langword="false" />. </value>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlConnectionStringBuilder.ContainsKey(System.String)">
      <summary>Indicates whether specified key is set in the <see cref="T:Devart.Data.SqlServer.SqlConnectionStringBuilder" /> object. </summary>
      <keywords>SqlConnectionStringBuilder.ContainsKey method </keywords>
      <param name="keyword">Key to search for. </param>
      <returns>
        <see langword="true" />, if the value of the specified key differs from default; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.ContextConnection">
      <summary>Gets or sets a value that indicates whether a client/server or in-process connection to SQL Server should be made. </summary>
      <keywords>SqlConnectionStringBuilder.ContextConnection property </keywords>
      <value>If <see langword="true" />, an in-process connection to SQL Server should be made; otherwise, <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.CurrentLanguage">
      <summary>Gets or sets the SQL Server Language record name. </summary>
      <keywords>SqlConnectionStringBuilder.CurrentLanguage property </keywords>
      <value>The SQL Server Language record name. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.DataSource">
      <summary>Gets or sets the name or network address of the instance of SQL Server to connect to. </summary>
      <keywords>SqlConnectionStringBuilder.DataSource property </keywords>
      <value>The name or network address of the instance of SQL Server. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.DefaultCommandTimeout">
      <summary>Gets or sets the time in seconds to wait while trying to execute a command before terminating the attempt and generating an error. </summary>
      <keywords>SqlConnectionStringBuilder.DefaultCommandTimeout property </keywords>
      <value>The time in seconds to wait while trying to execute a command before terminating the attempt and generating an error. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.Encrypt">
      <summary>Gets or sets a Boolean value that indicates whether SQL Server uses SSL encryption for all data sent between the client and server if the server has a certificate installed. </summary>
      <keywords>SqlConnectionStringBuilder.Encrypt property </keywords>
      <value>If <see langword="true" />, the connection should be encrypted; otherwise, <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.Enlist">
      <summary>Gets or sets a Boolean value that indicates whether the SQL Server connection pooler automatically enlists the connection in the creation thread's current transaction context. </summary>
      <keywords>SqlConnectionStringBuilder.Enlist property </keywords>
      <value>If <see langword="true" />, the connection should be enlisted; otherwise, <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.FailoverPartner">
      <summary>Gets or sets the name or address of the server, where database mirroring is configured, to connect to if the primary server is down. </summary>
      <keywords>SqlConnectionStringBuilder.FailoverPartner property </keywords>
      <value>The name or address of the server, where database mirroring is configured, to connect to if the primary server is down. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.InitialCatalog">
      <summary>Gets or sets the name of the database associated with the connection. </summary>
      <keywords>SqlConnectionStringBuilder.InitialCatalog property </keywords>
      <value>The name of the database. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.IntegratedSecurity">
      <summary>Gets or sets a Boolean value that indicates how the connection is authenticated. </summary>
      <keywords>SqlConnectionStringBuilder.IntegratedSecurity property </keywords>
      <value>If <see langword="true" />, current Windows account credentials are used for authentication; otherwise, User ID and Password are specified in the connection. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.IsFixedSize">
      <summary>Returns <see langword="true" />. </summary>
      <keywords>SqlConnectionStringBuilder.IsFixedSize property </keywords>
      <value>Always <see langword="true" />. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.Item(System.String)">
      <summary>Returns the value of given key. </summary>
      <keywords>SqlConnectionStringBuilder.Item property </keywords>
      <param name="keyword">The key name. </param>
      <value>Value of given key. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.Keys">
      <summary>Collection of keys in the <see cref="T:Devart.Data.SqlServer.SqlConnectionStringBuilder" />. </summary>
      <keywords>SqlConnectionStringBuilder.Keys property </keywords>
      <value>Collection of keys. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.LoadBalanceTimeout">
      <summary>Gets or sets the minimum time, in seconds, for the connection to live in the connection pool before being destroyed. </summary>
      <keywords>SqlConnectionStringBuilder.LoadBalanceTimeout property </keywords>
      <value>The minimum time for the connection to live. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.MaxPoolSize">
      <summary>The maximum number of connections allowed in the pool. </summary>
      <keywords>SqlConnectionStringBuilder.MaxPoolSize property </keywords>
      <value>Number of connections allowed in the pool. The default value is 100. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.MinPoolSize">
      <summary>The minimum number of connections allowed in the pool. </summary>
      <keywords>SqlConnectionStringBuilder.MinPoolSize property </keywords>
      <value>Number of connections allowed in the pool. The default value is 0. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.MultiSubnetFailover">
      <summary>Specifies whether to enable faster failover for all Availability Groups and or Failover Cluster Instance in SQL Server 2012. </summary>
      <keywords>SqlConnectionStringBuilder.MultiSubnetFailover property </keywords>
      <value><see langword="true" />, if a connection must attempt connections in parallel for multi-subnet failover or aggressively retry the TCP connection for a subnet failover; otherwise, <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.MultipleActiveResultSets">
      <summary>Determines whether the application can maintain multiple active result sets (MARS) or all result sets from one batch must be processsed or cancelled before any other batch can be executed on a connection. </summary>
      <keywords>SqlConnectionStringBuilder.MultipleActiveResultSets property </keywords>
      <value><see langword="true" />, if the application can maintain multiple active result sets; otherwise, <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.NetworkLibrary">
      <summary>Gets or sets a string that contains the name of the network library used to establish a connection to the SQL Server. </summary>
      <keywords>SqlConnectionStringBuilder.NetworkLibrary property </keywords>
      <value>The name of the network library. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.PacketSize">
      <summary>Gets or sets the size in bytes of the network packets used to communicate with an instance of SQL Server. </summary>
      <keywords>SqlConnectionStringBuilder.PacketSize property </keywords>
      <value>The size of the network packets. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.Password">
      <summary>Gets or sets the user's password to connect. </summary>
      <keywords>SqlConnectionStringBuilder.Password property </keywords>
      <value>The user's password to connect. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.PersistSecurityInfo">
      <summary>Gets or sets a value indicating whether password is stored in connection string after connection is opened. </summary>
      <keywords>SqlConnectionStringBuilder.PersistSecurityInfo property </keywords>
      <value>If <see langword="true" />, <see cref="P:Devart.Data.SqlServer.SqlConnection.ConnectionString" /> remains unaltered after opening connection; otherwise, password is removed. The default value is <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.Pooling">
      <summary>Gets or sets pooling mode. </summary>
      <keywords>SqlConnectionStringBuilder.Pooling property </keywords>
      <value>If <see langword="true" /> (the default value), when a <see cref="T:Devart.Data.SqlServer.SqlConnection">SqlConnection</see> is closed, the internal connection object is not actually closed, and is placed  object is drawn from the appropriate pool or is created and added to the appropriate pool. </value>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlConnectionStringBuilder.Remove(System.String)">
      <summary>Sets value of the specified key to default. </summary>
      <keywords>SqlConnectionStringBuilder.Remove method </keywords>
      <param name="keyword">The key to clear. </param>
      <returns>
        <see langword="true" />, if operation is successful; <see langword="false" /> otherwise. </returns>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.Replication">
      <summary>Gets or sets a Boolean value that indicates whether replication is supported using the connection. </summary>
      <keywords>SqlConnectionStringBuilder.Replication property </keywords>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlConnectionStringBuilder.ShouldSerialize(System.String)">
      <summary>Determines whether the key will be serialized if required. </summary>
      <keywords>SqlConnectionStringBuilder.ShouldSerialize method </keywords>
      <param name="keyword">Key name to inquiry. </param>
      <returns>
        <see langword="true" />, if the key will be serialized; <see langword="false" /> otherwise. </returns>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.TransactionScopeLocal">
      <summary>Enables support for non-distributed transactions in the TransactionScope implementation. </summary>
      <keywords>SqlConnectionStringBuilder.TransactionScopeLocal property </keywords>
      <value><see langword="true" />, if one-phase commit is used within TransactionScope; <see langword="false" /> otherwise. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.TrustServerCertificate">
      <summary>Gets or sets a value that indicates whether the channel will be encrypted while bypassing walking the certificate chain to validate trust. </summary>
      <keywords>SqlConnectionStringBuilder.TrustServerCertificate property </keywords>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
      <summary>Attempts to get a key value. </summary>
      <keywords>SqlConnectionStringBuilder.TryGetValue method </keywords>
      <param name="keyword">Key name to obtain the value. </param>
      <param name="value">Value of the key. If operation fails, the value is null. </param>
      <returns>
        <see langword="true" /> if the operation is successful; <see langword="false" /> otherwise. </returns>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.TypeSystemVersion">
      <summary>Gets or sets a string value that indicates the type system the application expects. </summary>
      <keywords>SqlConnectionStringBuilder.TypeSystemVersion property </keywords>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.UserID">
      <summary>Gets or sets the user ID to be used when connecting to SQL Server. </summary>
      <keywords>SqlConnectionStringBuilder.UserID property </keywords>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.UserInstance">
      <summary>Gets or sets a value that indicates whether to redirect the connection from the default SQL Server Express instance to a runtime-initiated instance running under the account of the caller. </summary>
      <keywords>SqlConnectionStringBuilder.UserInstance property </keywords>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.ValidateConnection">
      <summary>Indicates whether to validate connections that are being taken from the pool. </summary>
      <keywords>SqlConnectionStringBuilder.ValidateConnection property </keywords>
      <value><see langword="true" />, if the connection should be validated when it is taken from the pool; <see langword="false" /> otherwise. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.Values">
      <summary>Collection of values in the <see cref="T:Devart.Data.SqlServer.SqlConnectionStringBuilder" />. </summary>
      <keywords>SqlConnectionStringBuilder.Values property </keywords>
      <value>Collection of values. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlConnectionStringBuilder.WorkstationID">
      <summary>Gets or sets the name of the workstation connecting to SQL Server. </summary>
      <keywords>SqlConnectionStringBuilder.WorkstationID property </keywords>
      <value>The name of the workstation. </value>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlDataAdapter">
      <summary>Represents a set of data commands and a data source connection that are used to fill the <see cref="T:System.Data.DataSet" /> and update a SQL Server data. </summary>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataAdapter.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlDataAdapter" /> class. </summary>
      <overloads>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlDataAdapter" /> class. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataAdapter.#ctor(Devart.Data.SqlServer.SqlCommand)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlDataAdapter" /> class with the specified <see cref="T:Devart.Data.SqlServer.SqlCommand" /> as the <see ref="P:Devart.Data.SqlServer.SqlDataAdapter.SelectCommand" /> property. </summary>
      <param name="selectCommand">A <see cref="T:Devart.Data.SqlServer.SqlCommand" /> that contains SQL SELECT statement, and is set as the <see cref="P:Devart.Data.SqlServer.SqlDataAdapter.SelectCommand" /> property of the <see cref="T:Devart.Data.SqlServer.SqlDataAdapter" />. </param>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataAdapter.#ctor(System.String,Devart.Data.SqlServer.SqlConnection)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlDataAdapter" /> class with a <see cref="P:Devart.Data.SqlServer.SqlDataAdapter.SelectCommand" /> and a <see cref="T:Devart.Data.SqlServer.SqlConnection">SqlConnection</see> object. </summary>
      <param name="selectCommandText">A <see cref="T:System.String" /> that contains a SQL SELECT statement to be used as the <see cref="P:Devart.Data.SqlServer.SqlCommand.CommandText" /> of the <see cref="P:Devart.Data.SqlServer.SqlDataAdapter.SelectCommand" /> property of the <see cref="T:Devart.Data.SqlServer.SqlDataAdapter" />. </param>
      <param name="selectConnection">A <see cref="T:Devart.Data.SqlServer.SqlConnection">SqlConnection</see> that represents the connection. </param>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataAdapter.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlDataAdapter" /> class with a <see cref="P:Devart.Data.SqlServer.SqlDataAdapter.SelectCommand" /> and a connection string. </summary>
      <param name="selectCommandText">A <see cref="T:System.String" /> that is a SELECT statement to be used as the <see cref="P:Devart.Data.SqlServer.SqlCommand.CommandText" /> of the <see cref="P:Devart.Data.SqlServer.SqlDataAdapter.SelectCommand" /> property of the <see cref="T:Devart.Data.SqlServer.SqlDataAdapter" /> . </param>
      <param name="selectConnectionString">The connection string. </param>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlDataAdapter.DeleteCommand">
      <summary>Gets or sets a SQL Server statement to delete records from the data set. </summary>
      <keywords>SqlDataAdapter.DeleteCommand property </keywords>
      <value>A <see cref="T:Devart.Data.SqlServer.SqlCommand" /> used during an update operation to delete records in SQL Server that correspond to deleted rows in the <see cref="T:System.Data.DataSet" />. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlDataAdapter.InsertCommand">
      <summary>Gets or sets a SQL Server statement to insert new records into the data source. </summary>
      <keywords>SqlDataAdapter.InsertCommand property </keywords>
      <value>A <see cref="T:Devart.Data.SqlServer.SqlCommand" /> used during an update operation to insert records in the data source that correspond to new rows in the <see cref="T:System.Data.DataSet" />. </value>
    </member>
    <member name="E:Devart.Data.SqlServer.SqlDataAdapter.RowUpdated">
      <summary>Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> after a command is executed against the data source. The attempt to update is made, so the event fires. </summary>
      <keywords>SqlDataAdapter.RowUpdated event </keywords>
    </member>
    <member name="E:Devart.Data.SqlServer.SqlDataAdapter.RowUpdating">
      <summary>Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> before a command is executed against the data source. The attempt to update is made, so the event fires. </summary>
      <keywords>SqlDataAdapter.RowUpdating event </keywords>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlDataAdapter.SelectCommand">
      <summary>Gets or sets a SQL Server statement used to select records in the data source. </summary>
      <keywords>SqlDataAdapter.SelectCommand property </keywords>
      <value>A <see cref="T:Devart.Data.SqlServer.SqlCommand" /> that is used during a fill operation to select records from the data source for placement in the <see cref="T:System.Data.DataSet" />. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlDataAdapter.TableMappings">
      <summary>Gets a collection that provides the master mapping between a source table and a <see cref="T:Devart.Data.SqlServer.SqlDataTable" />. </summary>
      <keywords>SqlDataAdapter.TableMappings property </keywords>
      <value>A collection that provides the master mapping between the returned records and the <see cref="T:System.Data.DataSet" />. The default value is an empty collection. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlDataAdapter.UpdateCommand">
      <summary>Gets or sets a SQL Server statement used to update records in the data source. </summary>
      <keywords>SqlDataAdapter.UpdateCommand property </keywords>
      <value>A <see cref="T:Devart.Data.SqlServer.SqlCommand" /> used during an update operation to update records in the data source that correspond to modified rows in the <see cref="T:System.Data.DataSet" />. </value>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlDataReader">
      <summary>Reads a forward-only stream of rows from SQL Server. </summary>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.Close()">
      <summary>Closes the <see cref="T:Devart.Data.SqlServer.SqlDataReader" /> object. </summary>
      <keywords>SqlDataReader.Close method </keywords>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlDataReader.Depth">
      <summary>Gets a value that indicates the depth of nesting for the current row. </summary>
      <keywords>SqlDataReader.Depth property </keywords>
      <value>The depth of nesting for the current row (always zero). </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlDataReader.EndOfData">
      <summary>Indicates whether the <see cref="T:Devart.Data.SqlServer.SqlDataReader" /> has been read completely. </summary>
      <keywords>SqlDataReader.EndOfData property </keywords>
      <value>
        <see langword="true" /> if there is no more data in <see cref="T:Devart.Data.SqlServer.SqlDataReader" />. This property is <see langword="false" /> if there is more data to read, or there were no data at all. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlDataReader.FieldCount">
      <summary>Gets the number of columns in the current row. </summary>
      <keywords>SqlDataReader.FieldCount property </keywords>
      <value>When not positioned in a valid record set, 0; otherwise the number of columns in the current record. The default value is -1. </value>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetBoolean(System.Int32)">
      <summary>Gets the value of the specified column as a Boolean. </summary>
      <keywords>SqlDataReader.GetBoolean method </keywords>
      <param name="i"> </param>
      <returns>The value of the column. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetByte(System.Int32)">
      <summary>Gets the value of the specified column as a byte. </summary>
      <keywords>SqlDataReader.GetByte method </keywords>
      <param name="i"> </param>
      <returns>The value of the specified column as a byte. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
      <summary>Reads a stream of bytes from the specified column offset into the buffer as an array starting at the given buffer offset. </summary>
      <keywords>SqlDataReader.GetBytes method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <param name="fieldOffset">The index within the field where the read operation is to begin. </param>
      <param name="buffer">The buffer into which to read the stream of bytes. </param>
      <param name="bufferOffset">The index within the buffer where the write operation is to begin. </param>
      <param name="length">The maximum length to copy into the buffer. </param>
      <returns>
        <para>The actual number of bytes read.</para> </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetChar(System.Int32)">
      <summary>Gets the value of the specified column as a single character. </summary>
      <keywords>SqlDataReader.GetChar method </keywords>
      <param name="i"> </param>
      <returns>The value of the specified column as a character. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
      <summary>Reads a stream of characters from the specified column offset into the buffer as an array starting at the given buffer offset. </summary>
      <keywords>SqlDataReader.GetChars method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <param name="fieldOffset">The index within the field where the read operation is to begin. </param>
      <param name="buffer">The buffer into which to copy data. </param>
      <param name="bufferOffset">The index within the buffer where the write operation is to begin. </param>
      <param name="length">The maximum number of characters to read. </param>
      <returns>
        <para>The actual number of characters read.</para> </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetData(System.Int32)">
      <summary>Returns a <see cref="T:Devart.Data.SqlServer.SqlDataReader" /> object for the requested column ordinal. </summary>
      <keywords>SqlDataReader.GetData method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlDataReader" /> object. </returns>
      <overloads>Returns a <see cref="T:Devart.Data.SqlServer.SqlDataReader" /> object. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetDataTypeName(System.Int32)">
      <summary>Gets the name of the source data type. </summary>
      <keywords>SqlDataReader.GetDataTypeName method </keywords>
      <param name="i"> </param>
      <returns>The name of the back-end data type. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetDateTime(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.DateTime" /> object. </summary>
      <keywords>SqlDataReader.GetDateTime method </keywords>
      <param name="i"> </param>
      <returns>The value of the specified column. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetDateTimeOffset(System.Int32)">
      <summary>Gets the value of the specified column as an <see cref="T:System.DateTimeOffset" /> object. </summary>
      <keywords>SqlDataReader.GetDateTimeOffset method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>The value of the specified column as an <see cref="T:System.DateTimeOffset" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetDecimal(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:System.Decimal" /> object. </summary>
      <keywords>SqlDataReader.GetDecimal method </keywords>
      <param name="i"> </param>
      <returns>The value of the specified column. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetDouble(System.Int32)">
      <summary>Gets the value of the specified column as a double-precision floating point number. </summary>
      <keywords>SqlDataReader.GetDouble method </keywords>
      <param name="i"> </param>
      <returns>The value of the specified column. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetFieldType(System.Int32)">
      <summary>Gets the <see cref="T:System.Type" /> that is the data type of the object. </summary>
      <keywords>SqlDataReader.GetFieldType method </keywords>
      <param name="i"> </param>
      <returns>The <see cref="T:System.Type" /> that is the data type of the object. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetFloat(System.Int32)">
      <summary>Gets the value of the specified column as a single-precision floating point number. </summary>
      <keywords>SqlDataReader.GetFloat method </keywords>
      <param name="i"> </param>
      <returns>The value of the specified column. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetGuid(System.Int32)">
      <summary>Gets the value of the specified column as a globally-unique identifier (GUID). </summary>
      <keywords>SqlDataReader.GetGuid method </keywords>
      <param name="i"> </param>
      <returns>The value of the specified column. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetInt16(System.Int32)">
      <summary>Gets the value of the specified column as a 16-bit signed integer. </summary>
      <keywords>SqlDataReader.GetInt16 method </keywords>
      <param name="i"> </param>
      <returns>The value of the specified column. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetInt32(System.Int32)">
      <summary>Gets the value of the specified column as a 32-bit signed integer. </summary>
      <keywords>SqlDataReader.GetInt32 method </keywords>
      <param name="i"> </param>
      <returns>The value of the specified column. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetInt64(System.Int32)">
      <summary>Gets the value of the specified column as a 64-bit signed integer. </summary>
      <keywords>SqlDataReader.GetInt64 method </keywords>
      <param name="i"> </param>
      <returns>The value of the specified column. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetName(System.Int32)">
      <summary>Gets the name of the specified column. </summary>
      <keywords>SqlDataReader.GetName method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>A string that is the name of the specified column. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetOrdinal(System.String)">
      <summary>Gets the column ordinal, given the name of the column. </summary>
      <keywords>SqlDataReader.GetOrdinal method </keywords>
      <param name="name">The name of the column. </param>
      <returns>The column ordinal. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetProviderSpecificFieldType(System.Int32)">
      <summary>Gets the <see cref="T:System.Type" /> that is the provider-specific data type of the object. </summary>
      <keywords>SqlDataReader.GetProviderSpecificFieldType method </keywords>
      <param name="i"> </param>
      <returns>The <see cref="T:System.Type" /> that is the provider-specific data type of the object. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetProviderSpecificValue(System.Int32)">
      <summary>Gets the value of the specified column. If possible, a provider-specific type is used. </summary>
      <keywords>SqlDataReader.GetProviderSpecificValue method </keywords>
      <param name="i"> </param>
      <returns>The value to return. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetProviderSpecificValues(System.Object[])">
      <summary>Gets all column values for the current row. If possible, a provider-specific type is used. </summary>
      <keywords>SqlDataReader.GetProviderSpecificValues method </keywords>
      <param name="values">An array of <see cref="T:System.Object" /> into which to copy the column values. </param>
      <returns>The number of instances of <see cref="T:System.Object" /> in the array. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetSqlBinary(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlBinary" /> object. </summary>
      <keywords>SqlDataReader.GetSqlBinary method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlBinary" /> object. </returns>
      <overloads>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlBinary" /> object. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetSqlBinary(System.String)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlBinary" /> object. </summary>
      <keywords>SqlDataReader.GetSqlBinary method </keywords>
      <param name="name">The name of the column to get value of. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlBinary" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetSqlBoolean(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlBoolean" /> object. </summary>
      <keywords>SqlDataReader.GetSqlBoolean method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlBoolean" /> object. </returns>
      <overloads>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlBoolean" /> object. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetSqlBoolean(System.String)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlBoolean" /> object. </summary>
      <keywords>SqlDataReader.GetSqlBoolean method </keywords>
      <param name="name">The name of the column to get value of. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlBoolean" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetSqlByte(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlByte" /> object. </summary>
      <keywords>SqlDataReader.GetSqlByte method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlByte" /> object. </returns>
      <overloads>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlByte" /> object. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetSqlByte(System.String)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlByte" /> object. </summary>
      <keywords>SqlDataReader.GetSqlByte method </keywords>
      <param name="name">The name of the column to get value of. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlByte" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetSqlBytes(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlBytes" /> object. </summary>
      <keywords>SqlDataReader.GetSqlBytes method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlBytes" /> object. </returns>
      <overloads>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlBytes" /> object. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetSqlBytes(System.String)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlBytes" /> object. </summary>
      <keywords>SqlDataReader.GetSqlBytes method </keywords>
      <param name="name">The name of the column to get value of. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlBytes" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetSqlChars(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlChars" /> object. </summary>
      <keywords>SqlDataReader.GetSqlChars method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlChars" /> object. </returns>
      <overloads>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlChars" /> object. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetSqlChars(System.String)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlChars" /> object. </summary>
      <keywords>SqlDataReader.GetSqlChars method </keywords>
      <param name="name">The name of the column to get value of. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlChars" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetSqlDateTime(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlDateTime" /> object. </summary>
      <keywords>SqlDataReader.GetSqlDateTime method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlDateTime" /> object. </returns>
      <overloads>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlDateTime" /> object. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetSqlDateTime(System.String)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlDateTime" /> object. </summary>
      <keywords>SqlDataReader.GetSqlDateTime method </keywords>
      <param name="name">The name of the column to get value of. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlDateTime" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetSqlDecimal(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlDecimal" /> object. </summary>
      <keywords>SqlDataReader.GetSqlDecimal method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlDecimal" /> object. </returns>
      <overloads>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlDecimal" /> object. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetSqlDecimal(System.String)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlDecimal" /> object. </summary>
      <keywords>SqlDataReader.GetSqlDecimal method </keywords>
      <param name="name">The name of the column to get value of. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlDecimal" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetSqlDouble(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlDouble" /> object. </summary>
      <keywords>SqlDataReader.GetSqlDouble method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlDouble" /> object. </returns>
      <overloads>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlDouble" /> object. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetSqlDouble(System.String)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlDouble" /> object. </summary>
      <keywords>SqlDataReader.GetSqlDouble method </keywords>
      <param name="name">The name of the column to get value of. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlDouble" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetSqlGuid(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlGuid" /> object. </summary>
      <keywords>SqlDataReader.GetSqlGuid method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlGuid" /> object. </returns>
      <overloads>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlGuid" /> object. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetSqlGuid(System.String)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlGuid" /> object. </summary>
      <keywords>SqlDataReader.GetSqlGuid method </keywords>
      <param name="name">The name of the column to get value of. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlGuid" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetSqlInt16(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlInt16" /> object. </summary>
      <keywords>SqlDataReader.GetSqlInt16 method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlInt16" /> object. </returns>
      <overloads>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlInt16" /> object. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetSqlInt16(System.String)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlInt16" /> object. </summary>
      <keywords>SqlDataReader.GetSqlInt16 method </keywords>
      <param name="name">The name of the column to get value of. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlInt16" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetSqlInt32(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlInt32" /> object. </summary>
      <keywords>SqlDataReader.GetSqlInt32 method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlInt32" /> object. </returns>
      <overloads>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlInt32" /> object. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetSqlInt32(System.String)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlInt32" /> object. </summary>
      <keywords>SqlDataReader.GetSqlInt32 method </keywords>
      <param name="name">The name of the column to get value of. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlInt32" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetSqlInt64(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlInt64" /> object. </summary>
      <keywords>SqlDataReader.GetSqlInt64 method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlInt64" /> object. </returns>
      <overloads>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlInt64" /> object. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetSqlInt64(System.String)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlInt64" /> object. </summary>
      <keywords>SqlDataReader.GetSqlInt64 method </keywords>
      <param name="name">The name of the column to get value of. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlInt64" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetSqlMoney(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlMoney" /> object. </summary>
      <keywords>SqlDataReader.GetSqlMoney method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlMoney" /> object. </returns>
      <overloads>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlMoney" /> object. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetSqlMoney(System.String)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlMoney" /> object. </summary>
      <keywords>SqlDataReader.GetSqlMoney method </keywords>
      <param name="name">The name of the column to get value of. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlMoney" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetSqlSingle(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlSingle" /> object. </summary>
      <keywords>SqlDataReader.GetSqlSingle method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlSingle" /> object. </returns>
      <overloads>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlSingle" /> object. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetSqlSingle(System.String)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlSingle" /> object. </summary>
      <keywords>SqlDataReader.GetSqlSingle method </keywords>
      <param name="name">The name of the column to get value of. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlSingle" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetSqlString(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlString" /> object. </summary>
      <keywords>SqlDataReader.GetSqlString method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlString" /> object. </returns>
      <overloads>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlString" /> object. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetSqlString(System.String)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlString" /> object. </summary>
      <keywords>SqlDataReader.GetSqlString method </keywords>
      <param name="name">The name of the column to get value of. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlString" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetSqlValue(System.Int32)">
      <summary>Gets the value of the specified column. If possible, a provider-specific type is used. </summary>
      <keywords>SqlDataReader.GetSqlValue method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>The value to return. </returns>
      <overloads>Gets the value of the specified column. If possible, a provider-specific type is used. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetSqlValue(System.String)">
      <summary>Gets the value of the specified column. If possible, a provider-specific type is used. </summary>
      <keywords>SqlDataReader.GetSqlValue method </keywords>
      <param name="name">The name of the column to get value of. </param>
      <returns>The value to return. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetSqlValues(System.Object[])">
      <summary>Gets all columns in the collection for the current row. If possible, a provider-specific type is used. </summary>
      <keywords>SqlDataReader.GetSqlValues method </keywords>
      <param name="values">An array of <see cref="T:System.Object" /> into which to copy the columns. </param>
      <returns>The number of instances of <see cref="T:System.Object" /> in the array. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetSqlXml(System.Int32)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlXml" /> object. </summary>
      <keywords>SqlDataReader.GetSqlXml method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlXml" /> object. </returns>
      <overloads>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlXml" /> object. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetSqlXml(System.String)">
      <summary>Gets the value of the specified column as a <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlXml" /> object. </summary>
      <keywords>SqlDataReader.GetSqlXml method </keywords>
      <param name="name">The name of the column to get value of. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlTypes.SqlXml" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetString(System.Int32)">
      <summary>Gets the value of the specified column as a string. </summary>
      <keywords>SqlDataReader.GetString method </keywords>
      <param name="i"> </param>
      <returns>The value of the specified column. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetTimeSpan(System.Int32)">
      <summary>Gets the value of the specified column as a System.TimeSpan. </summary>
      <keywords>SqlDataReader.GetTimeSpan method </keywords>
      <param name="i">The zero-based column ordinal. </param>
      <returns>The value of the specified column as a System.TimeSpan. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetValue(System.Int32)">
      <summary>Gets the value of the specified column in its native format. </summary>
      <keywords>SqlDataReader.GetValue method </keywords>
      <param name="i"> </param>
      <returns>The value to return. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.GetValues(System.Object[])">
      <summary>Gets all column values for the current row. </summary>
      <keywords>SqlDataReader.GetValues method </keywords>
      <param name="values">An array of <see cref="T:System.Object" /> into which to copy the attribute column values. </param>
      <returns>The number of instances of <see cref="T:System.Object" /> in the array. </returns>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlDataReader.HasRows">
      <summary>Gets a value indicating whether the <see cref="T:Devart.Data.SqlServer.SqlDataReader" /> contains one or more rows. </summary>
      <keywords>SqlDataReader.HasRows property </keywords>
      <value>
        <see langword="true" /> if the <see cref="T:Devart.Data.SqlServer.SqlDataReader" /> contains one or more rows; otherwise, <see langword="false" />. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlDataReader.IsClosed">
      <summary>Gets a value that indicates whether the <see cref="T:Devart.Data.SqlServer.SqlDataReader" /> instance has been closed. </summary>
      <keywords>SqlDataReader.IsClosed property </keywords>
      <value><see langword="true" /> if the <see cref="T:Devart.Data.SqlServer.SqlDataReader" /> instance is closed; otherwise <see langword="false" />. </value>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.IsDBNull(System.Int32)">
      <summary>Gets a value indicating whether the column contains non-existent or missing values. </summary>
      <keywords>SqlDataReader.IsDBNull method </keywords>
      <param name="i"> </param>
      <returns>
        <see langword="true" /> if the specified column value is equivalent to <see cref="T:System.DBNull" />; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.NextResult()">
      <summary>Advances the data reader to the next result, when reading the results of batch SQL statements. </summary>
      <keywords>SqlDataReader.NextResult method </keywords>
      <returns>
        <see langword="true" /> if there are more result sets; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataReader.Read()">
      <summary>Advances the <see cref="T:Devart.Data.SqlServer.SqlDataReader" /> to the next record. </summary>
      <keywords>SqlDataReader.Read method </keywords>
      <returns>
        <see langword="true" /> if there are more rows; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlDataReader.RecordsAffected">
      <summary>Gets the number of rows changed, inserted, or deleted by execution of the SQL statement. </summary>
      <keywords>SqlDataReader.RecordsAffected property </keywords>
      <value>The number of rows changed, inserted, or deleted. -1 for SELECT statements; 0 if no rows were affected, or the statement failed. </value>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlDataSet">
      <summary>Represents an in-memory cache of data with support for SQL Server-specific features. </summary>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataSet.#ctor()">
      <summary>Initializes a new instance of a <see cref="T:Devart.Data.SqlServer.SqlDataSet" /> class with the given name. </summary>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Boolean)">
      <summary>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code. </summary>
      <param name="info">Contains the data needed to serialize or deserialize an <see cref="T:Devart.Data.SqlServer.SqlDataSet" /> object. </param>
      <param name="context">Describes the source and destination of a given serialized stream, and provides an additional caller-defined context. </param>
      <param name="ConstructSchema">Value that determines whether to construct schema or not. </param>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlDataSet.Connection">
      <summary>Associated <see cref="T:Devart.Data.SqlServer.SqlConnection">SqlConnection</see>. </summary>
      <keywords>SqlDataSet.Connection property </keywords>
      <value>
        <see cref="T:Devart.Data.SqlServer.SqlConnection">SqlConnection</see> used by <see cref="T:Devart.Data.SqlServer.SqlDataSet" />. </value>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataSet.CreateDataTable()">
      <summary>Creates and returns new <see cref="T:Devart.Data.SqlServer.SqlDataTable" /> object. </summary>
      <keywords>SqlDataSet.CreateDataTable method </keywords>
      <returns>The new <see cref="T:Devart.Data.SqlServer.SqlDataTable" /> object. </returns>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlDataSet.Relations">
      <summary>Gets the collection of relations within the <see cref="T:Devart.Data.SqlServer.SqlDataSet" /> </summary>
      <keywords>SqlDataSet.Relations property </keywords>
      <value>The collection of relations. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlDataSet.Tables">
      <summary>Gets collection of tables </summary>
      <keywords>SqlDataSet.Tables property </keywords>
      <value>Collection of tables in DataSet </value>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlDataSourceEnumerator">
      <summary>Enumerates all available instances of SQL Server within the local network. </summary>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataSourceEnumerator.#ctor()">
      <summary>Initializes a new instance of a <see cref="T:Devart.Data.SqlServer.SqlDataSourceEnumerator" /> class with the given name. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlDataSourceEnumerator.Instance">
      <summary>Gets an instance of the <see cref="T:Devart.Data.SqlServer.SqlDataSourceEnumerator" />, which can be used to retrieve information about available SQL Server instances. </summary>
      <keywords>SqlDataSourceEnumerator.Instance field </keywords>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlDataTable">
      <summary>Represents a single object that provides all of the functionality needed to retrieve and manipulate data from a SQL Server data source. </summary>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataTable.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlDataTable" /> class. </summary>
      <overloads>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlDataTable" /> class. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataTable.#ctor(Devart.Data.SqlServer.SqlCommand)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlDataTable" /> class. </summary>
      <param name="selectCommand">A <see cref="T:Devart.Data.SqlServer.SqlCommand" /> object used to select rows from the data source. </param>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataTable.#ctor(Devart.Data.SqlServer.SqlCommand,Devart.Data.SqlServer.SqlConnection)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlDataTable" /> class. </summary>
      <param name="selectCommand">A <see cref="T:Devart.Data.SqlServer.SqlCommand" /> object used to select rows from the data source. </param>
      <param name="connection">A <see cref="T:Devart.Data.SqlServer.SqlConnection">SqlConnection</see> used to connect to the data source. </param>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataTable.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlDataTable" /> class. </summary>
      <param name="tableName">Name of the table to work with. </param>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataTable.#ctor(System.String,Devart.Data.SqlServer.SqlConnection)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlDataTable" /> class. </summary>
      <param name="selectCommandText">The text of the selection command. </param>
      <param name="connection">A <see cref="T:Devart.Data.SqlServer.SqlConnection">SqlConnection</see> used to connect to the data source. </param>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlDataTable.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlDataTable" /> class. </summary>
      <param name="selectCommandText">The text of the selection command. </param>
      <param name="connectionString">Connection string used to connect to the data source. </param>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlDataTable.Connection">
      <summary>Gets or sets the <see cref="T:Devart.Data.SqlServer.SqlConnection">SqlConnection</see> used to connect to the data source. </summary>
      <keywords>SqlDataTable.Connection property </keywords>
      <value>A <see cref="T:Devart.Data.SqlServer.SqlConnection">SqlConnection</see> object which provides a connection to the data source. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlDataTable.DeleteCommand">
      <summary>Gets or sets a SQL Server statement to delete records from the data set. </summary>
      <keywords>SqlDataTable.DeleteCommand property </keywords>
      <value>A <see cref="T:Devart.Data.SqlServer.SqlCommand" /> used during an update operation to delete records in the data source that correspond to deleted rows in the <see cref="T:System.Data.DataSet" />. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlDataTable.FetchAll">
      <summary>Determines whether data is requested from server entirely or partially. </summary>
      <keywords>SqlDataTable.FetchAll property </keywords>
      <value>If <see langword="true" /> (by default), the data is requested when the <see cref="T:Devart.Data.SqlServer.SqlDataTable" /> is opened, otherwise records are fetched only when necessary. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlDataTable.InsertCommand">
      <summary>Gets or sets a SQL Server statement to insert new records into the data source. </summary>
      <keywords>SqlDataTable.InsertCommand property </keywords>
      <value>A <see cref="T:Devart.Data.SqlServer.SqlCommand" /> used during an update operation to insert records in the data source that correspond to new rows in the <see cref="T:System.Data.DataSet" />. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlDataTable.RefreshingFields">
      <summary>Gets or sets list of fields whose values should be retrieved after a DML statement execution. </summary>
      <keywords>SqlDataTable.RefreshingFields property </keywords>
      <value>The string containing list of field names separated by semicolon. </value>
    </member>
    <member name="E:Devart.Data.SqlServer.SqlDataTable.RowUpdated">
      <summary>Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> after a command is executed against the data source. The attempt to update is made, so the event fires. </summary>
      <keywords>SqlDataTable.RowUpdated event </keywords>
    </member>
    <member name="E:Devart.Data.SqlServer.SqlDataTable.RowUpdating">
      <summary>Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> before a command is executed against the data source. The attempt to update is made, so the event fires. </summary>
      <keywords>SqlDataTable.RowUpdating event </keywords>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlDataTable.SelectCommand">
      <summary>Gets or sets a SQL Server statement used to select records in the data source. </summary>
      <keywords>SqlDataTable.SelectCommand property </keywords>
      <value>A <see cref="T:Devart.Data.SqlServer.SqlCommand" /> that is used during a fill operation to select records from the data source for placement in the <see cref="T:System.Data.DataSet" />. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlDataTable.TableMapping">
      <summary>Gets a <see cref="T:System.Data.Common.DataTableMapping" /> object that provides the master mapping between a source table and a <see cref="T:Devart.Data.SqlServer.SqlDataTable" />. </summary>
      <keywords>SqlDataTable.TableMapping property </keywords>
      <value>A <see cref="T:System.Data.Common.DataTableMapping" /> object that provides the master mapping between the returned records and the <see cref="T:Devart.Data.SqlServer.SqlDataTable" />. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlDataTable.UpdateCommand">
      <summary>Gets or sets a SQL Server statement used to update records in the data source. </summary>
      <keywords>SqlDataTable.UpdateCommand property </keywords>
      <value>A <see cref="T:Devart.Data.SqlServer.SqlCommand" /> used during an update operation to update records in the data source that correspond to modified rows in the <see cref="T:System.Data.DataSet" />. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlDataTable.UpdatingFields">
      <summary>Gets or sets string containing list of field names used to generate update commands. </summary>
      <keywords>SqlDataTable.UpdatingFields property </keywords>
      <value>The string containing list of field names separated by semicolon. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlDataTable.UpdatingKeyFields">
      <summary>Gets or sets string containing list of key field names separated by semicolon. They are used to generate update commands. </summary>
      <keywords>SqlDataTable.UpdatingKeyFields property </keywords>
      <value>The string containing list of key field names separated by semicolon. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlDataTable.UpdatingTable">
      <summary>Gets or sets the string containing table name used to generate update commands. </summary>
      <keywords>SqlDataTable.UpdatingTable property </keywords>
      <value>The string containing table name. </value>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlDependency">
      <summary>Represents a dependency between an application and SQL Server. </summary>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlError">
      <summary>Collects information relevant to a warning or error returned by SQL Server. </summary>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlError.Class">
      <summary>Gets the severity level of the error returned from SQL Server. </summary>
      <keywords>SqlError.Class property </keywords>
      <value>A value from 1 to 25 that indicates the severity level of the error. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlError.LineNumber">
      <summary>Gets the line number within the SQL command batch or stored procedure that contains the error. </summary>
      <keywords>SqlError.LineNumber property </keywords>
      <value>The 1-based line number. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlError.Message">
      <summary>Gets the text describing the error. </summary>
      <keywords>SqlError.Message property </keywords>
      <value>The text describing the error. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlError.Number">
      <summary>Gets a number that identifies the type of error. </summary>
      <keywords>SqlError.Number property </keywords>
      <value>The number that identifies the type of error. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlError.Procedure">
      <summary>Gets the name of the stored procedure that generated the error. </summary>
      <keywords>SqlError.Procedure property </keywords>
      <value>The name of the stored procedure. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlError.Server">
      <summary>Gets the name of the instance of SQL Server that generated the error. </summary>
      <keywords>SqlError.Server property </keywords>
      <value>The name of the instance of SQL Server. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlError.Source">
      <summary>Gets the name of the provider that generated the error. </summary>
      <keywords>SqlError.Source property </keywords>
      <value>The name of the provider that generated the error. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlError.State">
      <summary>Gets a numeric error code from SQL Server that represents an error. </summary>
      <keywords>SqlError.State property </keywords>
      <value>The number that represents the error code. </value>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlError.ToString()">
      <summary>Gets the complete text of the error message. </summary>
      <keywords>SqlError.ToString method </keywords>
      <returns>The complete text of the error message. </returns>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlErrorCollection">
      <summary>Collects all errors generated by SQL Server. </summary>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlErrorCollection.#ctor()">
      <summary>Creates and initializes new instance of <see cref="T:Devart.Data.SqlServer.SqlErrorCollection" />. </summary>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlErrorCollection.CopyTo(Devart.Data.SqlServer.SqlError[],System.Int32)">
      <summary>Copies the elements of the <see cref="T:Devart.Data.SqlServer.SqlErrorCollection" /> into a <see cref="T:Devart.Data.SqlServer.SqlErrorCollection" />, starting at the specified index. </summary>
      <keywords>SqlErrorCollection.CopyTo method </keywords>
      <param name="array">The <see cref="T:Devart.Data.SqlServer.SqlErrorCollection" /> to copy the elements into. </param>
      <param name="index">The index from which to start copying into the array parameter. </param>
      <overloads>Copies the elements of the collection. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlErrorCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the <see cref="T:Devart.Data.SqlServer.SqlErrorCollection" /> into an <b>Array</b>, starting at the specified index. </summary>
      <keywords>SqlErrorCollection.CopyTo method </keywords>
      <param name="array">The <b>Array</b> to copy elements into. </param>
      <param name="index">The index from which to start copying into the array parameter. </param>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlErrorCollection.Item(System.Int32)">
      <summary>Gets the error at the specified index. </summary>
      <keywords>SqlErrorCollection.Item property </keywords>
      <param name="index">The zero-based index of the error to retrieve. </param>
      <value>A <see cref="T:Devart.Data.SqlServer.SqlError" /> object. </value>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlException">
      <summary>The exception that is thrown when SQL Server returns a warning or error. </summary>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlException.Class">
      <summary>Gets the severity level of the error. </summary>
      <keywords>SqlException.Class property </keywords>
      <value>The severity level of the error. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlException.Errors">
      <summary>Gets a collection of one or more <see cref="T:Devart.Data.SqlServer.SqlError" /> objects that give detailed information about exceptions. </summary>
      <keywords>SqlException.Errors property </keywords>
      <value>A <see cref="T:Devart.Data.SqlServer.SqlErrorCollection" /> object. </value>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the SerializationInfo with information about the exception. </summary>
      <keywords>SqlException.GetObjectData method </keywords>
      <param name="info"> </param>
      <param name="context"> </param>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlException.LineNumber">
      <summary>Gets the line number within the SQL command batch or stored procedure that generated the error. </summary>
      <keywords>SqlException.LineNumber property </keywords>
      <value>The 1-based line number. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlException.Message">
      <summary>Gets the text describing the error. </summary>
      <keywords>SqlException.Message property </keywords>
      <value>The text describing the error. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlException.Number">
      <summary>Gets a number that identifies the type of error. </summary>
      <keywords>SqlException.Number property </keywords>
      <value>The number that identifies the type of error. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlException.Procedure">
      <summary>Gets the name of the stored procedure that generated the error. </summary>
      <keywords>SqlException.Procedure property </keywords>
      <value>The name of the stored procedure. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlException.Server">
      <summary>Gets the name of the instance of SQL Server that generated the error. </summary>
      <keywords>SqlException.Server property </keywords>
      <value>The name of the instance of SQL Server. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlException.Source">
      <summary>Gets the name of the provider that generated the error. </summary>
      <keywords>SqlException.Source property </keywords>
      <value>The name of the provider that generated the error. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlException.State">
      <summary>Gets a numeric error code from SQL Server that represents an error. </summary>
      <keywords>SqlException.State property </keywords>
      <value>The number that represents the error code. </value>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlInfoMessageEventArgs">
      <summary>Provides data for the <see cref="E:Devart.Data.SqlServer.SqlConnection.InfoMessage" /> event. </summary>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlInfoMessageEventArgs.Errors">
      <summary>Gets the collection of warnings sent from the server. </summary>
      <keywords>SqlInfoMessageEventArgs.Errors property </keywords>
      <value>The collection of warnings. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlInfoMessageEventArgs.Message">
      <summary>Gets the text describing the error. </summary>
      <keywords>SqlInfoMessageEventArgs.Message property </keywords>
      <value>The text describing the error. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlInfoMessageEventArgs.Source">
      <summary>Gets the name of the object that generated the error. </summary>
      <keywords>SqlInfoMessageEventArgs.Source property </keywords>
      <value>The name of the object. </value>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlInfoMessageEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Devart.Data.SqlServer.SqlConnection.InfoMessage" /> event of <see cref="T:Devart.Data.SqlServer.SqlConnection">SqlConnection</see>. </summary>
      <keywords>SqlInfoMessageEventHandler delegate </keywords>
      <param name="sender">The source of the event. </param>
      <param name="e">The <see cref="T:Devart.Data.SqlServer.SqlInfoMessageEventArgs" /> object that contains the event data. </param>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlLoader">
      <summary>Serves to load external data into SQL Server. </summary>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlLoader.#ctor()">
      <summary>Creates an <see cref="T:Devart.Data.SqlServer.SqlLoader" /> object without <see cref="P:Devart.Data.SqlServer.SqlLoader.Connection" /> and with empty <see cref="P:Devart.Data.SqlServer.SqlLoader.TableName" />. </summary>
      <overloads>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlLoader" /> class. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlLoader.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlLoader" /> class with table name that will be loaded. </summary>
      <param name="tableName">Name of the table that will be loaded. </param>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlLoader.#ctor(System.String,Devart.Data.SqlServer.SqlConnection)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlLoader" /> class with table name that will be loaded and a <see cref="T:Devart.Data.SqlServer.SqlConnection">SqlConnection</see> object. </summary>
      <param name="tableName">Name of the table that will be loaded. </param>
      <param name="connection">A <see cref="T:Devart.Data.SqlServer.SqlConnection">SqlConnection</see> object that represents the connection to a data source. </param>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlLoader.BatchSize">
      <summary>Gets or sets the maximal number of records to send to the server in one batch. </summary>
      <keywords>SqlLoader.BatchSize property </keywords>
      <value>The maximal number of records to send to the server in one batch. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlLoader.BufferSize">
      <summary>Not used in dotConnect for SQL Server. </summary>
      <keywords>SqlLoader.BufferSize property </keywords>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlLoader.Close()">
      <summary>Closes loading session and flushes remaining rows to the table. </summary>
      <keywords>SqlLoader.Close method </keywords>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlLoader.Columns">
      <summary>Gets the <see cref="T:Devart.Data.SqlServer.SqlLoaderColumnCollection">SqlLoaderColumnCollection</see> collection. </summary>
      <keywords>SqlLoader.Columns property </keywords>
      <value>Columns which loaded table consist of. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlLoader.Connection">
      <summary>Gets or sets the <see cref="T:Devart.Data.SqlServer.SqlConnection">SqlConnection</see> used by this instance of the <see cref="T:Devart.Data.SqlServer.SqlLoader" />. </summary>
      <keywords>SqlLoader.Connection property </keywords>
      <value>The connection to a data source. The default value is a null reference. </value>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlLoader.CreateColumns()">
      <summary>Retrieves table columns information from the table specified in the <see cref="P:Devart.Data.SqlServer.SqlLoader.TableName" /> property and populates columns collection. </summary>
      <keywords>SqlLoader.CreateColumns method </keywords>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlLoader.NextRow()">
      <summary>Advances <see cref="T:Devart.Data.SqlServer.SqlLoader" /> to the next row. </summary>
      <keywords>SqlLoader.NextRow method </keywords>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlLoader.Open()">
      <summary>Prepares <see cref="T:Devart.Data.SqlServer.SqlLoader" /> for the loading. </summary>
      <keywords>SqlLoader.Open method </keywords>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlLoader.SetValue(System.Int32,System.Object)">
      <summary>Sets the value of the column at the specified ordinal. </summary>
      <keywords>SqlLoader.SetValue method </keywords>
      <param name="i">Zero-based index of the column. </param>
      <param name="value">Column value. </param>
      <overloads>Sets the value of the column at the specified ordinal and name. </overloads>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlLoader.TableName">
      <summary>Gets or sets table name that will be loaded. </summary>
      <keywords>SqlLoader.TableName property </keywords>
      <value>Name of the table that will be loaded. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlLoader.Transaction">
      <summary>Gets or sets the <see cref="T:Devart.Data.SqlServer.SqlTransaction" /> instance to perform the data load operation within. </summary>
      <keywords>SqlLoader.Transaction property </keywords>
      <value>The <see cref="T:Devart.Data.SqlServer.SqlTransaction" /> instance to perform the data load operation within. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlLoader.UseInternalTransaction">
      <summary>Specifies whether <see cref="T:Devart.Data.SqlServer.SqlLoader" /> should wrap the data load operation into an internally created transaction. </summary>
      <keywords>SqlLoader.UseInternalTransaction property </keywords>
      <value><see langword="true" />, if <see cref="T:Devart.Data.SqlServer.SqlLoader" /> should wrap the data load operation into an internally created transaction; otherwise, <see langword="false" />. </value>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlLoaderColumn">
      <summary>Represents the attributes for column loading. </summary>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlLoaderColumn.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlLoaderColumn">SqlLoaderColumn</see> class. </summary>
      <overloads>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlLoaderColumn">SqlLoaderColumn</see> class. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlLoaderColumn.#ctor(System.String,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlLoaderColumn" /> class with the column name and column data type. </summary>
      <param name="name">The name of the column. </param>
      <param name="type">The data type of the column. </param>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlLoaderColumn.Size">
      <summary>Gets or sets the maximum size, in bytes, of the data within the column. </summary>
      <keywords>SqlLoaderColumn.Size property </keywords>
      <value>The maximum size, in bytes, of the data within the column. </value>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlLoaderColumnCollection">
      <summary>Represents a collection of columns relevant to a <see cref="T:Devart.Data.SqlServer.SqlLoader" />. </summary>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlLoaderColumnCollection.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlLoaderColumnCollection">SqlLoaderColumnCollection</see> class. </summary>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlLoaderColumnCollection.Add(System.String,System.Type)">
      <summary>Adds a <see cref="T:Devart.Data.SqlServer.SqlLoaderColumn" /> to the <see cref="T:Devart.Data.SqlServer.SqlLoaderColumnCollection" /> given the column name and column data type. </summary>
      <keywords>SqlLoaderColumnCollection.Add method </keywords>
      <param name="name">The name of the column. </param>
      <param name="type">The data type of the column. </param>
      <returns>The new column's ordinal. </returns>
      <overloads>Adds the specified <see cref="T:Devart.Data.SqlServer.SqlLoaderColumn">SqlLoaderColumn</see> to the <see cref="T:Devart.Data.SqlServer.SqlLoaderColumnCollection">SqlLoaderColumnCollection</see>. </overloads>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlLoaderColumnCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:Devart.Data.SqlServer.SqlLoaderColumn">SqlLoaderColumn</see> at the specified index. </summary>
      <keywords>SqlLoaderColumnCollection.Item property </keywords>
      <param name="index">The zero-based index of the column. </param>
      <value>The <see cref="T:Devart.Data.SqlServer.SqlLoaderColumn">SqlLoaderColumn</see> at the specified index. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlLoaderColumnCollection.Item(System.String)">
      <summary>Gets or sets the <see cref="T:Devart.Data.SqlServer.SqlLoaderColumn">SqlLoaderColumn</see> with the specified name. </summary>
      <keywords>SqlLoaderColumnCollection.Item property </keywords>
      <param name="name">The name of the column. </param>
      <value>The <see cref="T:Devart.Data.SqlServer.SqlLoaderColumn">SqlLoaderColumn</see> with the specified name. </value>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlMonitor">
      <summary>Monitors dynamic SQL execution in applications that use dotConnect for SQL Server. </summary>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlMonitor.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlMonitor" /> class. </summary>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlMonitor.IsActive">
      <summary>Gets or sets whether <see cref="T:Devart.Data.SqlServer.SqlMonitor" /> should watch SQL execution. </summary>
      <keywords>SqlMonitor.IsActive property </keywords>
      <value>
        <see langword="true" /> if the <see cref="T:Devart.Data.SqlServer.SqlMonitor" /> object should detect SQL queries peformed by the application; <see langword="false" /> otherwise. </value>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlParameter">
      <summary>Represents a parameter to a <see cref="T:Devart.Data.SqlServer.SqlCommand" />, and optionally, its mapping to <see cref="T:System.Data.DataSet" /> columns. </summary>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlParameter.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlParameter" /> class. </summary>
      <overloads>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlParameter" /> class. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlParameter.#ctor(System.String,Devart.Data.SqlServer.SqlType)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlParameter" /> class with the parameter name and data type. </summary>
      <param name="parameterName">The name of the parameter. </param>
      <param name="dbType">One of the <see cref="T:Devart.Data.SqlServer.SqlType" /> values. </param>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlParameter.#ctor(System.String,Devart.Data.SqlServer.SqlType,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlParameter" /> class with the parameter name, data type, and width. </summary>
      <param name="parameterName">The name of the parameter. </param>
      <param name="dbType">One of the <see cref="T:Devart.Data.SqlServer.SqlType" /> values. </param>
      <param name="size">The maximum size, in bytes, of the data within the column. </param>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlParameter.#ctor(System.String,Devart.Data.SqlServer.SqlType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlParameter" /> class with the parameter name, data type, width, source column name, parameter direction, numeric precision, and other properties. </summary>
      <param name="parameterName">The name of the parameter. </param>
      <param name="sqlDbType">One of the <see cref="T:Devart.Data.SqlServer.SqlType" /> values. </param>
      <param name="size">The maximum size, in bytes, of the data within the column. </param>
      <param name="direction">One of the <see cref="T:System.Data.ParameterDirection" /> values. </param>
      <param name="isNullable"><see langword="true" /> if the value of the field can be null; otherwise, <see langword="false" />. </param>
      <param name="precision">The total number of digits to the left and right of the decimal point to which <see cref="P:Devart.Data.SqlServer.SqlParameter.Value" /> is resolved. </param>
      <param name="scale">The total number of decimal places to which <see cref="P:Devart.Data.SqlServer.SqlParameter.Value" /> is resolved. </param>
      <param name="sourceColumn">The name of the source column. </param>
      <param name="sourceVersion">One of the <see cref="T:System.Data.DataRowVersion" /> values. </param>
      <param name="sourceColumnNullMapping">Specifies whether the source column is nullable. </param>
      <param name="value">An Object that is the value of the <see cref="T:Devart.Data.SqlServer.SqlParameter" />. </param>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlParameter.#ctor(System.String,Devart.Data.SqlServer.SqlType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlParameter" /> class with the parameter name, data type, width, source column name, parameter direction, numeric precision, and other properties. </summary>
      <param name="parameterName">The name of the parameter. </param>
      <param name="dbType">One of the <see cref="T:Devart.Data.SqlServer.SqlType" /> values. </param>
      <param name="size">The maximum size, in bytes, of the data within the column. </param>
      <param name="direction">One of the <see cref="T:System.Data.ParameterDirection" /> values. </param>
      <param name="isNullable"><see langword="true" /> if the value of the field can be null; otherwise, <see langword="false" />. </param>
      <param name="precision">The total number of digits to the left and right of the decimal point to which <see cref="P:Devart.Common.DbParameterBase.Value" /> is resolved. </param>
      <param name="scale">The total number of decimal places to which <see cref="P:Devart.Common.DbParameterBase.Value" /> is resolved. </param>
      <param name="sourceColumn">The name of the source column. </param>
      <param name="sourceVersion">One of the <see cref="T:System.Data.DataRowVersion" /> values. </param>
      <param name="value">An Object that is the value of the <see cref="T:Devart.Data.SqlServer.SqlParameter" />. </param>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlParameter.#ctor(System.String,Devart.Data.SqlServer.SqlType,System.Int32,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlParameter" /> class with the parameter name, data type, width, and source column name. For internal use. </summary>
      <param name="parameterName">The name of the parameter. </param>
      <param name="dbType">One of the <see cref="T:Devart.Data.SqlServer.SqlType" /> values. </param>
      <param name="size">The maximum size, in bytes, of the data within the column. </param>
      <param name="sourceColumn">The name of the source column. </param>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlParameter.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlParameter" /> class with the parameter name and a <see cref="T:Devart.Data.SqlServer.SqlParameter" /> object. </summary>
      <param name="parameterName">The name of the parameter. </param>
      <param name="value">An Object that is the value of the <see cref="T:Devart.Data.SqlServer.SqlParameter" />. </param>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlParameter.Clone()">
      <summary>Creates a new object that is a copy of the current <see cref="T:Devart.Data.SqlServer.SqlParameter" /> instance. </summary>
      <keywords>SqlParameter.Clone method </keywords>
      <returns>A new <see cref="T:Devart.Data.SqlServer.SqlParameter" /> object in which all property values are the same as the original. </returns>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlParameter.DbType">
      <summary>Gets or sets the <see cref="T:System.Data.DbType" /> of the parameter. </summary>
      <keywords>SqlParameter.DbType property </keywords>
      <value>One of the <see cref="T:System.Data.DbType" /> values. The default value is <see cref="T:System.String" />. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlParameter.Offset">
      <summary>Gets or sets the offset to the <see cref="P:Devart.Data.SqlServer.SqlParameter.Value" /> property. </summary>
      <keywords>SqlParameter.Offset property </keywords>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlParameter.Precision">
      <summary>Gets or sets the maximum number of digits used to represent the <see cref="P:Devart.Common.DbParameterBase.Value" /> property. </summary>
      <keywords>SqlParameter.Precision property </keywords>
      <value>The maximum number of digits used to represent the <see cref="P:Devart.Common.DbParameterBase.Value" /> property. The default value is 0. </value>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlParameter.ResetDbType()">
      <summary>Clears explicit <see cref="P:Devart.Data.SqlServer.SqlParameter.SqlType" /> assignment. </summary>
      <keywords>SqlParameter.ResetDbType method </keywords>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlParameter.Scale">
      <summary>Gets or sets the number of decimal places to which <see cref="P:Devart.Common.DbParameterBase.Value" /> is resolved. </summary>
      <keywords>SqlParameter.Scale property </keywords>
      <value>The number of decimal places to which <see cref="P:Devart.Common.DbParameterBase.Value" /> is resolved. The default value is 0. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlParameter.Size">
      <summary>Gets or sets the maximum size, in bytes, of the data within the column. </summary>
      <keywords>SqlParameter.Size property </keywords>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlParameter.SqlType">
      <summary>Gets or sets the <see cref="T:Devart.Data.SqlServer.SqlType" /> of the parameter. </summary>
      <keywords>SqlParameter.SqlType property </keywords>
      <value>A <see cref="T:Devart.Data.SqlServer.SqlType" /> value that is the <see cref="P:Devart.Data.SqlServer.SqlParameter.SqlType" /> of the parameter. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlParameter.SqlValue">
      <summary>Gets or sets the value of the parameter as an SQL type. </summary>
      <keywords>SqlParameter.SqlValue property </keywords>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlParameter.ToString()">
      <summary>Gets a string containing the <see cref="P:Devart.Common.DbParameterBase.ParameterName" />. </summary>
      <keywords>SqlParameter.ToString method </keywords>
      <returns>A string containing the <see cref="P:Devart.Common.DbParameterBase.ParameterName" />. </returns>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlParameter.UdtTypeName">
      <summary>Gets or sets a string that represents a user-defined type as a parameter. </summary>
      <keywords>SqlParameter.UdtTypeName property </keywords>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlParameter.Value">
      <summary>Gets or sets the value of the parameter. </summary>
      <keywords>SqlParameter.Value property </keywords>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlParameterCollection">
      <summary>Collects all parameters relevant to a <see cref="T:Devart.Data.SqlServer.SqlCommand" /> as well as their respective mappings to <see cref="T:System.Data.DataSet" /> columns. </summary>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlParameterCollection.Add(Devart.Data.SqlServer.SqlParameter)">
      <summary>Adds the specified <see cref="T:Devart.Data.SqlServer.SqlParameter" /> to the <see cref="T:Devart.Data.SqlServer.SqlParameterCollection" />. </summary>
      <keywords>SqlParameterCollection.Add method </keywords>
      <param name="value">The <see cref="T:Devart.Data.SqlServer.SqlParameter" /> to add to the collection. </param>
      <returns>The new <see cref="T:Devart.Data.SqlServer.SqlParameter" /> object. </returns>
      <overloads>Adds the specified <see cref="T:Devart.Data.SqlServer.SqlParameter" /> to the <see cref="T:Devart.Data.SqlServer.SqlParameterCollection" />. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlParameterCollection.Add(System.Object)">
      <summary>Adds a <see cref="T:Devart.Data.SqlServer.SqlParameter" /> to the <see cref="T:Devart.Data.SqlServer.SqlParameterCollection" /> given the parameter value. </summary>
      <keywords>SqlParameterCollection.Add method </keywords>
      <param name="value">The <see cref="P:Devart.Data.SqlServer.SqlParameter.Value" /> of the <see cref="T:Devart.Data.SqlServer.SqlParameter" /> to add to the collection. </param>
      <returns>The new <see cref="T:Devart.Data.SqlServer.SqlParameter" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlParameterCollection.Add(System.String,Devart.Data.SqlServer.SqlType)">
      <summary>Adds a <see cref="T:Devart.Data.SqlServer.SqlParameter" /> to the <see cref="T:Devart.Data.SqlServer.SqlParameterCollection" /> given the parameter name and data type. </summary>
      <keywords>SqlParameterCollection.Add method </keywords>
      <param name="parameterName">The name of the parameter. </param>
      <param name="type">One of the <see cref="T:Devart.Data.SqlServer.SqlType" /> values. </param>
      <returns>The new <see cref="T:Devart.Data.SqlServer.SqlParameter" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlParameterCollection.Add(System.String,Devart.Data.SqlServer.SqlType,System.Int32)">
      <summary>Adds a <see cref="T:Devart.Data.SqlServer.SqlParameter" /> to the <see cref="T:Devart.Data.SqlServer.SqlParameterCollection" /> given the the parameter name, data type, and data size. </summary>
      <keywords>SqlParameterCollection.Add method </keywords>
      <param name="parameterName">The name of the parameter. </param>
      <param name="dbType">One of the <see cref="T:Devart.Data.SqlServer.SqlType" /> values. </param>
      <param name="size">The maximum size, in bytes, of the data the parameter can contain. </param>
      <returns>The new <see cref="T:Devart.Data.SqlServer.SqlParameter" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlParameterCollection.Add(System.String,Devart.Data.SqlServer.SqlType,System.Int32,System.String)">
      <summary>Adds a <see cref="T:Devart.Data.SqlServer.SqlParameter" /> to the <see cref="T:Devart.Data.SqlServer.SqlParameterCollection" /> given the parameter name, data type, column width, and source column name. </summary>
      <keywords>SqlParameterCollection.Add method </keywords>
      <param name="parameterName">The name of the parameter. </param>
      <param name="dbType">One of the <see cref="T:Devart.Data.SqlServer.SqlType" /> values. </param>
      <param name="size">The maximum size, in bytes, of the data the parameter can contain. </param>
      <param name="sourceColumn">The name of the source column. </param>
      <returns>The new <see cref="T:Devart.Data.SqlServer.SqlParameter" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlParameterCollection.Add(System.String,System.Object)">
      <summary>Adds a <see cref="T:Devart.Data.SqlServer.SqlParameter" /> to the <see cref="T:Devart.Data.SqlServer.SqlParameterCollection" /> given the parameter name and value. </summary>
      <keywords>SqlParameterCollection.Add method </keywords>
      <param name="parameterName">The name of the parameter. </param>
      <param name="value">The <see cref="P:Devart.Common.DbParameterBase.Value" /> of the <see cref="T:Devart.Data.SqlServer.SqlParameter" /> to add to the collection. </param>
      <returns>The new <see cref="T:Devart.Data.SqlServer.SqlParameter" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlParameterCollection.AddRange(System.Array)">
      <summary>Adds the specified array of <see cref="T:Devart.Data.SqlServer.SqlParameter" /> objects to the <see cref="T:Devart.Data.SqlServer.SqlParameterCollection" />. </summary>
      <keywords>SqlParameterCollection.AddRange method </keywords>
      <param name="values">Array of <see cref="T:Devart.Data.SqlServer.SqlParameter" /> objects to be added to the <see cref="T:Devart.Data.SqlServer.SqlParameterCollection" />. </param>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlParameterCollection.AddWithValue(System.String,System.Object)">
      <summary>Adds a <see cref="T:Devart.Data.SqlServer.SqlParameter" /> to the <see cref="T:Devart.Data.SqlServer.SqlParameterCollection" /> given the parameter name and value. </summary>
      <keywords>SqlParameterCollection.AddWithValue method </keywords>
      <param name="parameterName">Name of the parameter. </param>
      <param name="value">Value of the parameter. </param>
      <returns>A new <see cref="T:Devart.Data.SqlServer.SqlParameter" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlParameterCollection.Clear()">
      <summary>Removes all items from the collection. </summary>
      <keywords>SqlParameterCollection.Clear method </keywords>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlParameterCollection.Insert(System.Int32,System.Object)">
      <summary>Inserts a <see cref="T:Devart.Data.SqlServer.SqlParameter" /> into the collection at the specified index. </summary>
      <keywords>SqlParameterCollection.Insert method </keywords>
      <param name="index">The zero-based index where the parameter is to be inserted within the collection. </param>
      <param name="value">The <see cref="T:Devart.Data.SqlServer.SqlParameter" /> object to add to the collection. </param>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlParameterCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:Devart.Data.SqlServer.SqlParameter" /> at the specified index. </summary>
      <keywords>SqlParameterCollection.Item property </keywords>
      <param name="index">The zero-based index of the parameter to retrieve. </param>
      <value>The <see cref="T:Devart.Data.SqlServer.SqlParameter" /> at the specified index. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlParameterCollection.Item(System.String)">
      <summary>Gets or sets the <see cref="T:Devart.Data.SqlServer.SqlParameter" /> with the specified name. </summary>
      <keywords>SqlParameterCollection.Item property </keywords>
      <param name="parameterName">The name of the parameter to retrieve. </param>
      <value>The <see cref="T:Devart.Data.SqlServer.SqlParameter" /> with the specified name. </value>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlParameterCollection.Remove(System.Object)">
      <summary>Removes the specified <see cref="T:Devart.Data.SqlServer.SqlParameter" /> from the collection. </summary>
      <keywords>SqlParameterCollection.Remove method </keywords>
      <param name="value">The <see cref="T:Devart.Data.SqlServer.SqlParameter" /> object to remove from the collection. </param>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlParameterCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:Devart.Data.SqlServer.SqlParameter" /> at the specified index from the collection. </summary>
      <keywords>SqlParameterCollection.RemoveAt method </keywords>
      <param name="index">The zero-based index of the parameter to remove. </param>
      <overloads>Removes the specified <see cref="T:Devart.Data.SqlServer.SqlParameter" /> from the collection. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlParameterCollection.RemoveAt(System.String)">
      <summary>Removes the <see cref="T:Devart.Data.SqlServer.SqlParameter" /> with the specified name from the collection. </summary>
      <keywords>SqlParameterCollection.RemoveAt method </keywords>
      <param name="parameterName">The name of the parameter to remove. </param>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlRowUpdatedEventArgs">
      <summary>Provides data for the <see cref="E:Devart.Data.SqlServer.SqlDataAdapter.RowUpdated" /> event. </summary>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlRowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlRowUpdatedEventArgs" /> class. </summary>
      <param name="row">The <see cref="T:System.Data.DataRow" /> sent through an update operation. </param>
      <param name="command">The <see cref="T:Devart.Data.SqlServer.SqlCommand" /> executed when <see cref="M:System.Data.Common.DbDataAdapter.Update()" /> is called. </param>
      <param name="statementType">One of the <see cref="T:System.Data.StatementType" /> values that specifies the type of query executed. </param>
      <param name="tableMapping">The <see cref="T:System.Data.Common.DataTableMapping" /> sent through <see cref="M:System.Data.Common.DbDataAdapter.Update()" />. </param>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlRowUpdatedEventArgs.Command">
      <summary>Gets the <see cref="T:Devart.Data.SqlServer.SqlCommand" /> executed when <see cref="M:System.Data.Common.DbDataAdapter.Update()" /> is called. </summary>
      <keywords>SqlRowUpdatedEventArgs.Command property </keywords>
      <value>The <see cref="T:Devart.Data.SqlServer.SqlCommand" /> to execute when <see cref="M:System.Data.Common.DbDataAdapter.Update()" /> is called. </value>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlRowUpdatedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Devart.Data.SqlServer.SqlDataAdapter.RowUpdated" /> event of an <see cref="T:Devart.Data.SqlServer.SqlDataAdapter" />. </summary>
      <keywords>SqlRowUpdatedEventHandler delegate </keywords>
      <param name="sender">The source of the event. </param>
      <param name="e">The <see cref="T:Devart.Data.SqlServer.SqlRowUpdatedEventArgs" /> object that contains the event data. </param>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlRowUpdatingEventArgs">
      <summary>Provides data for the <see cref="E:Devart.Data.SqlServer.SqlDataAdapter.RowUpdating" /> event. This class cannot be inherited. </summary>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlRowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlRowUpdatingEventArgs" /> class. </summary>
      <param name="row">The <see cref="T:System.Data.DataRow" /> to update. </param>
      <param name="command">The <see cref="T:Devart.Data.SqlServer.SqlCommand" /> to execute during <see cref="M:System.Data.Common.DbDataAdapter.Update()" /> is called. </param>
      <param name="statementType">One of the <see cref="T:System.Data.StatementType" /> values that specifies the type of query executed. </param>
      <param name="tableMapping">The <see cref="T:System.Data.Common.DataTableMapping" /> sent through <see cref="M:System.Data.Common.DbDataAdapter.Update()" />. </param>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlRowUpdatingEventArgs.Command">
      <summary>Gets or sets the <see cref="T:Devart.Data.SqlServer.SqlCommand" /> to execute when <see cref="M:System.Data.Common.DbDataAdapter.Update()" /> is called. </summary>
      <keywords>SqlRowUpdatingEventArgs.Command property </keywords>
      <value>The <see cref="T:Devart.Data.SqlServer.SqlCommand" /> to execute when <see cref="M:System.Data.Common.DbDataAdapter.Update()" /> is called. </value>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlRowUpdatingEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Devart.Data.SqlServer.SqlDataAdapter.RowUpdating" /> event of an <see cref="T:Devart.Data.SqlServer.SqlDataAdapter" />. </summary>
      <keywords>SqlRowUpdatingEventHandler delegate </keywords>
      <param name="sender">The source of the event. </param>
      <param name="e">The <see cref="T:Devart.Data.SqlServer.SqlRowUpdatingEventArgs" /> object that contains the event data. </param>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlScript">
      <summary>Serves to execute series of SQL statements separated by special symbols. </summary>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlScript.#ctor()">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlScript" /> class. </summary>
      <overloads>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlScript" /> class. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlScript.#ctor(System.IO.Stream)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlScript" /> class with a <b>Stream</b> object to get SQL statements from. </summary>
      <param name="stream">A <b>Stream</b> object that contains the script text. </param>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlScript.#ctor(System.IO.Stream,Devart.Data.SqlServer.SqlConnection)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlScript" /> class with a <b>Stream</b> object to get SQL statements from and a <see cref="T:Devart.Data.SqlServer.SqlConnection">SqlConnection</see> object. </summary>
      <param name="stream">A <b>Stream</b> object that contains the script text. </param>
      <param name="connection">A <see cref="T:Devart.Data.SqlServer.SqlConnection">SqlConnection</see> object that represents the connection to a database. </param>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlScript.#ctor(System.IO.TextReader)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlScript" /> class with a <b>TextReader</b> object to get SQL statements from. </summary>
      <param name="reader">A <b>TextReader</b> object that contains the script text. </param>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlScript.#ctor(System.IO.TextReader,Devart.Data.SqlServer.SqlConnection)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlScript" /> class with a <b>TextReader</b> object to get SQL statements from and a <see cref="T:Devart.Data.SqlServer.SqlConnection">SqlConnection</see> object. </summary>
      <param name="reader">A <b>TextReader</b> object that contains the script text. </param>
      <param name="connection">A <see cref="T:Devart.Data.SqlServer.SqlConnection">SqlConnection</see> object that represents the connection to a database. </param>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlScript.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlScript" /> class with the text of the query. </summary>
      <param name="scriptText">The text of the query. </param>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlScript.#ctor(System.String,Devart.Data.SqlServer.SqlConnection)">
      <summary>Initializes a new instance of the <see cref="T:Devart.Data.SqlServer.SqlScript" /> class  with the text of the query and a <see cref="T:Devart.Data.SqlServer.SqlConnection">SqlConnection</see> object. </summary>
      <param name="scriptText">The text of the query. </param>
      <param name="connection">A <see cref="T:Devart.Data.SqlServer.SqlConnection">SqlConnection</see> object that represents the connection to a database. </param>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlScript.Connection">
      <summary>Gets or sets the <see cref="T:Devart.Data.SqlServer.SqlConnection">SqlConnection</see> used by this instance of the <see cref="T:Devart.Data.SqlServer.SqlScript" />. </summary>
      <keywords>SqlScript.Connection property </keywords>
      <value>The connection to a data source. The default value is a null reference. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlScript.ScriptText">
      <summary>Gets or sets text of the script. </summary>
      <keywords>SqlScript.ScriptText property </keywords>
      <value>Script text. The default value is an empty string (""). </value>
    </member>
    <member name="E:Devart.Data.SqlServer.SqlScript.SqlStatementExecute">
      <summary>Occurs when a SQL statement within the script is about to execute. </summary>
      <keywords>SqlScript.SqlStatementExecute event </keywords>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlSelectComputeBy">
      <summary>Represents a COMPUTE BY clause of a SELECT statement. </summary>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlSelectFor">
      <summary>Represents a SELECT FOR clause of a SELECT statement. </summary>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlSelectForType">
      <summary>Represents type of a SELECT FOR clause. </summary>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlSelectGroupByInfo">
      <summary>Represents a GROUP BY clause parameters of a SELECT statement. </summary>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlSelectStatement">
      <summary>Represents a SELECT statement. </summary>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlSelectStatement.#ctor()">
      <summary>Creates and initializes new instance of <see cref="T:Devart.Data.SqlServer.SqlSelectStatement" />. </summary>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlSelectStatement.ComputeBy">
      <summary>Gets a COMPUTE BY clause of a SELECT statement. </summary>
      <keywords>SqlSelectStatement.ComputeBy property </keywords>
      <value>A <see cref="T:Devart.Data.SqlServer.SqlSelectComputeBy" /> object. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlSelectStatement.For">
      <summary>Gets a SELECT FOR clause of a SELECT statement. </summary>
      <keywords>SqlSelectStatement.For property </keywords>
      <value>A <see cref="T:Devart.Data.SqlServer.SqlSelectFor" /> object. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlSelectStatement.GroupByInfo">
      <summary>Gets GROUP BY clause parameters of a SELECT statement. </summary>
      <keywords>SqlSelectStatement.GroupByInfo property </keywords>
      <value>A <see cref="T:Devart.Data.SqlServer.SqlSelectGroupByInfo" /> object. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlSelectStatement.Having">
      <summary>Gets or sets HAVING clause of the statement. </summary>
      <keywords>SqlSelectStatement.Having property </keywords>
      <value>The HAVING clause of the statement. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlSelectStatement.Options">
      <summary>Gets or sets OPTIONS clause of a SELECT statement. </summary>
      <keywords>SqlSelectStatement.Options property </keywords>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlSelectStatement.Parse(System.String)">
      <summary>Converts the specified SELECT statement to a <see cref="T:Devart.Data.SqlServer.SqlSelectStatement" /> object. </summary>
      <keywords>SqlSelectStatement.Parse method </keywords>
      <param name="text">The statement to parse. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlSelectStatement" /> object that represents the specified SELECT statement. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlSelectStatement.Parse(System.String,Devart.Common.ParserBehavior)">
      <summary>Converts the specified SELECT statement to a <see cref="T:Devart.Data.SqlServer.SqlSelectStatement">SqlSelectStatement</see> object. </summary>
      <keywords>SqlSelectStatement.Parse method </keywords>
      <param name="text">The statement to parse. </param>
      <param name="behavior">One of the <see cref="T:Devart.Common.ParserBehavior" /> values. Determines what parts of the statement to analyze. </param>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlSelectStatement">SqlSelectStatement</see> object that represents the specified SELECT statement. </returns>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlSelectStatement.Top">
      <summary>Gets a TOP clause of a SELECT statement. </summary>
      <keywords>SqlSelectStatement.Top property </keywords>
      <value>A <see cref="T:Devart.Data.SqlServer.SqlSelectTop" /> object. </value>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlSelectStatement.TryParse(System.String,Devart.Common.ParserBehavior,Devart.Data.SqlServer.SqlSelectStatement@)">
      <summary>Tries to convert the specified SELECT statement to a <see cref="T:Devart.Data.SqlServer.SqlSelectStatement">SqlSelectStatement</see> object. </summary>
      <keywords>SqlSelectStatement.TryParse method </keywords>
      <param name="text">The statement to parse. </param>
      <param name="behavior">One of the <see cref="T:Devart.Common.ParserBehavior" /> values. Determines what parts of the statement to analyze. </param>
      <param name="statement">A <see cref="T:Devart.Data.SqlServer.SqlSelectStatement">SqlSelectStatement</see> object that represents the specified SELECT statement. </param>
      <returns>
        <see langword="true" /> if the conversion was successful; otherwise, <see langword="false" /> </returns>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlSelectStatement.Where">
      <summary>Gets or sets WHERE clause of the statement. </summary>
      <keywords>SqlSelectStatement.Where property </keywords>
      <value>The WHERE clause of the statement. </value>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlSelectTop">
      <summary>Represents a TOP clause of a SELECT statement. </summary>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlServerMetaDataCollectionNames">
      <summary>Enumerates collection names you can use for metadata retrieval purposes. </summary>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlServerProviderFactory">
      <summary>Represents a factory required to create inheritors of generic base classes to use with dotConnect for SQL Server. </summary>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlServerProviderFactory.#ctor()">
      <summary>Creates an instance of <see cref="T:Devart.Data.SqlServer.SqlServerProviderFactory" />. </summary>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlServerProviderFactory.CanCreateDataSourceEnumerator">
      <summary>Gets a value indicating whether the <see cref="T:Devart.Data.SqlServer.SqlServerProviderFactory" /> can create a <see cref="T:Devart.Common.DbDataSourceEnumerator" /> object. </summary>
      <keywords>SqlServerProviderFactory.CanCreateDataSourceEnumerator property </keywords>
      <value><see langword="true" />, if a <see cref="T:Devart.Common.DbDataSourceEnumerator" /> object can be created; otherwise, <see langword="false" />. </value>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlServerProviderFactory.CreateCommand()">
      <summary>Creates and returns a <see cref="T:Devart.Data.SqlServer.SqlCommand" /> object. </summary>
      <keywords>SqlServerProviderFactory.CreateCommand method </keywords>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlCommand" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlServerProviderFactory.CreateCommandBuilder()">
      <summary>Creates and returns a <see cref="T:Devart.Data.SqlServer.SqlCommandBuilder" /> object. </summary>
      <keywords>SqlServerProviderFactory.CreateCommandBuilder method </keywords>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlCommandBuilder" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlServerProviderFactory.CreateConnection()">
      <summary>Creates and returns a <see cref="T:Devart.Data.SqlServer.SqlConnection" /> object. </summary>
      <keywords>SqlServerProviderFactory.CreateConnection method </keywords>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlConnection" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlServerProviderFactory.CreateConnectionStringBuilder()">
      <summary>Creates and returns a <see cref="T:Devart.Data.SqlServer.SqlConnectionStringBuilder" /> object. </summary>
      <keywords>SqlServerProviderFactory.CreateConnectionStringBuilder method </keywords>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlConnectionStringBuilder" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlServerProviderFactory.CreateDataAdapter()">
      <summary>Creates and returns a <see cref="T:Devart.Data.SqlServer.SqlDataAdapter" /> object. </summary>
      <keywords>SqlServerProviderFactory.CreateDataAdapter method </keywords>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlDataAdapter" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlServerProviderFactory.CreateDataSourceEnumerator()">
      <summary>Creates and returns a <see cref="T:Devart.Common.DbDataSourceEnumerator" /> object. </summary>
      <keywords>SqlServerProviderFactory.CreateDataSourceEnumerator method </keywords>
      <returns>A <see cref="T:Devart.Common.DbDataSourceEnumerator" /> object. </returns>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlServerProviderFactory.CreateParameter()">
      <summary>Creates and returns a <see cref="T:Devart.Data.SqlServer.SqlParameter" /> object. </summary>
      <keywords>SqlServerProviderFactory.CreateParameter method </keywords>
      <returns>A <see cref="T:Devart.Data.SqlServer.SqlParameter" /> object. </returns>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlServerProviderFactory.Instance">
      <summary>Returns the instance of <see cref="T:Devart.Data.SqlServer.SqlServerProviderFactory" />. </summary>
      <keywords>SqlServerProviderFactory.Instance field </keywords>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlStatementExecuteEventArgs">
      <summary>Provides data for the <see cref="E:Devart.Data.SqlServer.SqlScript.SqlStatementExecute" /> event of the <see cref="T:Devart.Data.SqlServer.SqlScript" /> class. </summary>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlStatementExecuteEventArgs.Reader">
      <summary>Gets or sets an <see cref="T:Devart.Data.SqlServer.SqlDataReader" /> that represents statement resultset. </summary>
      <keywords>SqlStatementExecuteEventArgs.Reader property </keywords>
      <value>An <see cref="T:Devart.Data.SqlServer.SqlDataReader" /> object. This property can be null. </value>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlStatementExecuteEventHandler">
      <summary>Represents the method that will handle the <see cref="E:Devart.Data.SqlServer.SqlScript.SqlStatementExecute" /> event of an <see cref="T:Devart.Data.SqlServer.SqlScript" />. </summary>
      <keywords>SqlStatementExecuteEventHandler delegate </keywords>
      <param name="sender">The source of the event. </param>
      <param name="e">An <see cref="T:Devart.Data.SqlServer.SqlStatementExecuteEventArgs" /> object that contains the event data. </param>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlTransaction">
      <summary>Represents a SQL transaction to be made in the SQL Server database. </summary>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlTransaction.Commit()">
      <summary>Commits the database transaction. </summary>
      <keywords>SqlTransaction.Commit method </keywords>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlTransaction.Connection">
      <summary>Gets the <see cref="T:Devart.Data.SqlServer.SqlConnection">SqlConnection</see> object associated with the transaction, or <see langword="null" /> if the transaction is no longer valid. </summary>
      <keywords>SqlTransaction.Connection property </keywords>
      <value>The <see cref="T:Devart.Data.SqlServer.SqlConnection">SqlConnection</see> object associated with the transaction. </value>
    </member>
    <member name="P:Devart.Data.SqlServer.SqlTransaction.IsolationLevel">
      <summary>Specifies the <see cref="T:System.Data.IsolationLevel" /> for this transaction. </summary>
      <keywords>SqlTransaction.IsolationLevel property </keywords>
      <value>The <see cref="T:System.Data.IsolationLevel" /> for this transaction. The default value is IsolationLevel.ReadCommitted. </value>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlTransaction.Rollback()">
      <summary>Rolls back a database transaction from a pending state. </summary>
      <keywords>SqlTransaction.Rollback method </keywords>
      <overloads>Rolls back a transaction from a pending state. </overloads>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlTransaction.Rollback(System.String)">
      <summary>Rolls back a transaction from a pending state, and specifies the transaction or savepoint name. </summary>
      <keywords>SqlTransaction.Rollback method </keywords>
      <param name="savePointName">The transaction or savepoint name. </param>
    </member>
    <member name="M:Devart.Data.SqlServer.SqlTransaction.Save(System.String)">
      <summary>Creates a savepoint in the transaction that can be used to roll back a part of the transaction, and specifies the savepoint name. </summary>
      <keywords>SqlTransaction.Save method </keywords>
      <param name="savePointName">The savepoint name. </param>
    </member>
    <member name="T:Devart.Data.SqlServer.SqlType">
      <summary>Specifies the data type of a field or a <see cref="T:Devart.Data.SqlServer.SqlParameter" />. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlType.BigInt">
      <summary>Int64. A 64-bit signed integer. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlType.Binary">
      <summary>Array of type Byte. A fixed-length stream of binary data ranging between 1 and 8,000 bytes. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlType.Bit">
      <summary>Boolean. An unsigned numeric value that can be 0, 1, or a null reference (Nothing in Visual Basic). </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlType.Char">
      <summary>String. A fixed-length stream of non-Unicode characters ranging between 1 and 8,000 characters. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlType.Date">
      <summary>Date. Date can be in range from January 1, 0001 to December 31, 9999. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlType.DateTime">
      <summary>DateTime. Date and time data ranging in value from January 1, 1753 to December 31, 9999 to an accuracy of 3.33 milliseconds. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlType.DateTime2">
      <summary>DateTime. Date and time data ranging in value from January 1, 0001 to December 31, 9999. The precision can be up to the tenth of microsecond. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlType.DateTimeOffset">
      <summary>DateTime with the UTC offset appended. Date and time data ranging in value from January 1, 0001 00:00:000000 -14:00 to December 31, 9999 23:59:59.9999999 +14:00. The precision can be up to the tenth of microsecond. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlType.Decimal">
      <summary>Decimal. A fixed precision and scale numeric value between -10 38 -1 and 10 38 -1. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlType.Float">
      <summary>Double. A floating point number within the range of -1.79E +308 through 1.79E +308. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlType.Image">
      <summary>Array of type Byte. A variable-length stream of binary data ranging from 0 to 2 31 -1 (or 2,147,483,647) bytes. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlType.Int">
      <summary>Int32. A 32-bit signed integer. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlType.Money">
      <summary>Decimal. A currency value ranging from -2 63 (or -922,337,203,685,477.5808) to 2 63 -1 (or +922,337,203,685,477.5807) with an accuracy to a ten-thousandth of a currency unit. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlType.NChar">
      <summary>String. A fixed-length stream of Unicode characters ranging between 1 and 4,000 characters. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlType.NText">
      <summary>String. A variable-length stream of Unicode data with a maximum length of 2 30 - 1 (or 1,073,741,823) characters. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlType.NVarChar">
      <summary>String. A variable-length stream of Unicode characters ranging between 1 and 4,000 characters. Implicit conversion fails if the string is greater than 4,000 characters. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlType.Real">
      <summary>Single. A floating point number within the range of -3.40E +38 through 3.40E +38. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlType.SmallDateTime">
      <summary>DateTime. Date and time data ranging in value from January 1, 1900 to June 6, 2079 to an accuracy of one minute. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlType.SmallInt">
      <summary>Int16. A 16-bit signed integer. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlType.SmallMoney">
      <summary>Decimal. A currency value ranging from -214,748.3648 to +214,748.3647 with an accuracy to a ten-thousandth of a currency unit. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlType.Structured">
      <summary>A result set. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlType.Text">
      <summary>String. A variable-length stream of non-Unicode data with a maximum length of 2 31 -1 (or 2,147,483,647) characters. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlType.Time">
      <summary>Time. The value can be in range from 00:00:00.0000000 to 23:59:59.9999999. The precision can be up to the tenth of microsecond. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlType.Timestamp">
      <summary>Array of type Byte. Automatically generated binary numbers, which are guaranteed to be unique within a database. timestamp is used typically as a mechanism for version-stamping table rows. The storage size is 8 bytes. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlType.TinyInt">
      <summary>Byte. An 8-bit unsigned integer. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlType.Udt">
      <summary>A SQL Server 2005 user-defined type (UDT). </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlType.UniqueIdentifier">
      <summary>Guid. A globally unique identifier (or GUID). </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlType.VarBinary">
      <summary>Array of type Byte. A variable-length stream of binary data ranging between 1 and 8,000 bytes. Implicit conversion fails if the byte array is greater than 8,000 bytes. Explicitly set the object when working with byte arrays larger than 8,000 bytes. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlType.VarChar">
      <summary>String. A variable-length stream of non-Unicode characters ranging between 1 and 8,000 characters. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlType.Variant">
      <summary>Object. A special data type that can contain numeric, string, binary, or date data as well as the SQL Server values Empty and Null, which is assumed if no other type is declared. </summary>
    </member>
    <member name="F:Devart.Data.SqlServer.SqlType.Xml">
      <summary>An XML value. </summary>
    </member>
  </members>
</doc>